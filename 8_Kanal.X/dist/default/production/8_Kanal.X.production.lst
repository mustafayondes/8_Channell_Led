

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Dec 07 13:47:01 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0088                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307                           
   308                           	psect	idataBANK0
   309  0517                     __pidataBANK0:	
   310                           
   311                           ;initializer for _adres2
   312  0517  3410               	retlw	16
   313                           
   314                           	psect	strings
   315  0400                     __pstrings:	
   316  0400                     stringtab:	
   317  0400                     __stringtab:	
   318  0400                     stringcode:	
   319                           ;	String table - string pointers are 1 byte each
   320                           
   321  0400                     stringdir:	
   322  0400  3004               	movlw	high stringdir
   323  0401  008A               	movwf	10
   324  0402  0804               	movf	4,w
   325  0403  0A84               	incf	4,f
   326  0404  0782               	addwf	2,f
   327  0405                     __stringbase:	
   328  0405  3400               	retlw	0
   329  0406                     __end_of__stringtab:	
   330  0406                     _dpowers:	
   331  0406  3401               	retlw	1
   332  0407  3400               	retlw	0
   333  0408  340A               	retlw	10
   334  0409  3400               	retlw	0
   335  040A  3464               	retlw	100
   336  040B  3400               	retlw	0
   337  040C  34E8               	retlw	232
   338  040D  3403               	retlw	3
   339  040E  3410               	retlw	16
   340  040F  3427               	retlw	39
   341  0410                     __end_of_dpowers:	
   342  0003                     _STATUSbits	set	3
   343  0008                     _PORTD	set	8
   344  0001                     _TMR0	set	1
   345  0007                     _PORTC	set	7
   346  000B                     _INTCONbits	set	11
   347  0036                     _RB6	set	54
   348  0035                     _RB5	set	53
   349  0034                     _RB4	set	52
   350  005D                     _T0IE	set	93
   351  005E                     _PEIE	set	94
   352  005A                     _T0IF	set	90
   353  0040                     _RD0	set	64
   354  005F                     _GIE	set	95
   355  0043                     _RD3	set	67
   356  0042                     _RD2	set	66
   357  0047                     _RD7	set	71
   358  0046                     _RD6	set	70
   359  0045                     _RD5	set	69
   360  0044                     _RD4	set	68
   361  0088                     _TRISD	set	136
   362  0087                     _TRISC	set	135
   363  0086                     _TRISBbits	set	134
   364  0408                     _PS0	set	1032
   365  0409                     _PS1	set	1033
   366  040A                     _PS2	set	1034
   367  040B                     _PSA	set	1035
   368  040D                     _T0CS	set	1037
   369  010C                     _EEDATA	set	268
   370  010D                     _EEADR	set	269
   371  018D                     _EECON2	set	397
   372  018C                     _EECON1	set	396
   373  018C                     _EECON1bits	set	396
   374  0410                     STR_2:	
   375  0410  3461               	retlw	97	;'a'
   376  0411  346E               	retlw	110	;'n'
   377  0412  3469               	retlw	105	;'i'
   378  0413  346D               	retlw	109	;'m'
   379  0414  3461               	retlw	97	;'a'
   380  0415  3473               	retlw	115	;'s'
   381  0416  3479               	retlw	121	;'y'
   382  0417  346F               	retlw	111	;'o'
   383  0418  346E               	retlw	110	;'n'
   384  0419  3420               	retlw	32	;' '
   385  041A  343D               	retlw	61	;'='
   386  041B  3420               	retlw	32	;' '
   387  041C  3425               	retlw	37	;'%'
   388  041D  3475               	retlw	117	;'u'
   389  041E  3420               	retlw	32	;' '
   390  041F  3420               	retlw	32	;' '
   391  0420  3400               	retlw	0
   392  0421                     STR_1:	
   393  0421  347A               	retlw	122	;'z'
   394  0422  3461               	retlw	97	;'a'
   395  0423  346D               	retlw	109	;'m'
   396  0424  3461               	retlw	97	;'a'
   397  0425  346E               	retlw	110	;'n'
   398  0426  3420               	retlw	32	;' '
   399  0427  343D               	retlw	61	;'='
   400  0428  3420               	retlw	32	;' '
   401  0429  3425               	retlw	37	;'%'
   402  042A  342E               	retlw	46	;'.'
   403  042B  3432               	retlw	50	;'2'
   404  042C  3475               	retlw	117	;'u'
   405  042D  3420               	retlw	32	;' '
   406  042E  346D               	retlw	109	;'m'
   407  042F  3473               	retlw	115	;'s'
   408  0430  3420               	retlw	32	;' '
   409  0431  3400               	retlw	0
   410                           
   411                           ; #config settings
   412  0000                     
   413                           	psect	cinit
   414  000F                     start_initialization:	
   415  000F                     __initialization:	
   416                           
   417                           ; Initialize objects allocated to BANK0
   418  000F  120A  118A  2517  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   419  0014  00E5               	movwf	__pdataBANK0& (0+127)
   420                           
   421                           ; Clear objects allocated to BANK0
   422  0015  1383               	bcf	3,7	;select IRP bank0
   423  0016  3020               	movlw	low __pbssBANK0
   424  0017  0084               	movwf	4
   425  0018  304E               	movlw	low (__pbssBANK0+46)
   426  0019  120A  118A  250F   	fcall	clear_ram0
   427                           
   428                           ; Clear objects allocated to COMMON
   429  001C  01FA               	clrf	__pbssCOMMON& (0+127)
   430  001D                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433  001D                     __end_of__initialization:	
   434  001D  0183               	clrf	3
   435  001E  120A  118A  2953   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  007A                     __pbssCOMMON:	
   439  007A                     _timer_giris:	
   440  007A                     	ds	1
   441                           
   442                           	psect	bssBANK0
   443  0020                     __pbssBANK0:	
   444  0020                     _zaman_goster:	
   445  0020                     	ds	2
   446  0022                     _adres:	
   447  0022                     	ds	1
   448  0023                     _animasyon:	
   449  0023                     	ds	1
   450  0024                     _zaman_sayac:	
   451  0024                     	ds	1
   452  0025                     _zaman:	
   453  0025                     	ds	1
   454  0026                     _dizi:	
   455  0026                     	ds	40
   456                           
   457                           	psect	dataBANK0
   458  0065                     __pdataBANK0:	
   459  0065                     _adres2:	
   460  0065                     	ds	1
   461                           
   462                           	psect	clrtext
   463  050F                     clear_ram0:	
   464                           ;	Called with FSR containing the base address, and
   465                           ;	W with the last address+1
   466                           
   467  050F  0064               	clrwdt	;clear the watchdog before getting into this loop
   468  0510                     clrloop0:	
   469  0510  0180               	clrf	0	;clear RAM location pointed to by FSR
   470  0511  0A84               	incf	4,f	;increment pointer
   471  0512  0604               	xorwf	4,w	;XOR with final address
   472  0513  1903               	btfsc	3,2	;have we reached the end yet?
   473  0514  3400               	retlw	0	;all done for this memory range, return
   474  0515  0604               	xorwf	4,w	;XOR again to restore value
   475  0516  2D10               	goto	clrloop0	;do the next byte
   476                           
   477                           	psect	cstackCOMMON
   478  0070                     __pcstackCOMMON:	
   479  0070                     ?_isdigit:	
   480  0070                     ?_eeprom_read:	
   481                           ; 1 bit 
   482                           
   483  0070                     ?_Lcd_Port:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_Lcd_Cmd:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_Lcd_Init:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_Lcd_Write_Char:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_Lcd_Write_String:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_RB_Interrupt:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ??_RB_Interrupt:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_TMR0_Init:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_main:	
   508                           ; 1 bytes @ 0x0
   509                           
   510                           
   511                           ; 1 bytes @ 0x0
   512  0070                     	ds	3
   513  0073                     ??_eeprom_read:	
   514  0073                     ?_eeprom_write:	
   515                           ; 1 bytes @ 0x3
   516                           
   517  0073                     ??_isdigit:	
   518                           ; 1 bytes @ 0x3
   519                           
   520  0073                     ??_Lcd_Port:	
   521                           ; 1 bytes @ 0x3
   522                           
   523  0073                     ??_TMR0_Init:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  0073                     ?___bmul:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0073                     ?___wmul:	
   530                           ; 1 bytes @ 0x3
   531                           
   532  0073                     ?___lwdiv:	
   533                           ; 2 bytes @ 0x3
   534                           
   535  0073                     Lcd_Port@a:	
   536                           ; 2 bytes @ 0x3
   537                           
   538  0073                     eeprom_write@value:	
   539                           ; 1 bytes @ 0x3
   540                           
   541  0073                     ___bmul@multiplicand:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     _isdigit$709:	
   545                           ; 1 bytes @ 0x3
   546                           
   547  0073                     ___wmul@multiplier:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     ___lwdiv@divisor:	
   551                           ; 2 bytes @ 0x3
   552                           
   553                           
   554                           ; 2 bytes @ 0x3
   555  0073                     	ds	1
   556  0074                     ??_eeprom_write:	
   557  0074                     ??_Lcd_Cmd:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0074                     ??_Lcd_Write_Char:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     ??___bmul:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0074                     eeprom_read@addr:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0074                     isdigit@c:	
   570                           ; 1 bytes @ 0x4
   571                           
   572                           
   573                           ; 1 bytes @ 0x4
   574  0074                     	ds	1
   575  0075                     Lcd_Write_Char@temp:	
   576  0075                     eeprom_write@addr:	
   577                           ; 1 bytes @ 0x5
   578                           
   579  0075                     ___bmul@product:	
   580                           ; 1 bytes @ 0x5
   581                           
   582  0075                     ___wmul@multiplicand:	
   583                           ; 1 bytes @ 0x5
   584                           
   585  0075                     ___lwdiv@dividend:	
   586                           ; 2 bytes @ 0x5
   587                           
   588                           
   589                           ; 2 bytes @ 0x5
   590  0075                     	ds	1
   591  0076                     Lcd_Cmd@a:	
   592  0076                     Lcd_Write_Char@y:	
   593                           ; 1 bytes @ 0x6
   594                           
   595  0076                     ___bmul@multiplier:	
   596                           ; 1 bytes @ 0x6
   597                           
   598                           
   599                           ; 1 bytes @ 0x6
   600  0076                     	ds	1
   601  0077                     ?_Lcd_Set_Cursor:	
   602  0077                     ??_Lcd_Init:	
   603                           ; 1 bytes @ 0x7
   604                           
   605  0077                     ??___wmul:	
   606                           ; 1 bytes @ 0x7
   607                           
   608  0077                     ??___lwdiv:	
   609                           ; 1 bytes @ 0x7
   610                           
   611  0077                     Lcd_Set_Cursor@b:	
   612                           ; 1 bytes @ 0x7
   613                           
   614  0077                     Lcd_Write_Char@a:	
   615                           ; 1 bytes @ 0x7
   616                           
   617  0077                     ___wmul@product:	
   618                           ; 1 bytes @ 0x7
   619                           
   620                           
   621                           ; 2 bytes @ 0x7
   622  0077                     	ds	1
   623  0078                     ??_Lcd_Set_Cursor:	
   624  0078                     ??_Lcd_Write_String:	
   625                           ; 1 bytes @ 0x8
   626                           
   627  0078                     ??___lwmod:	
   628                           ; 1 bytes @ 0x8
   629                           
   630                           
   631                           ; 1 bytes @ 0x8
   632  0078                     	ds	1
   633  0079                     ___lwmod@counter:	
   634                           
   635                           ; 1 bytes @ 0x9
   636  0079                     	ds	1
   637                           
   638                           	psect	cstackBANK0
   639  004E                     __pcstackBANK0:	
   640  004E                     Lcd_Set_Cursor@a:	
   641  004E                     ___lwdiv@counter:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  004E                     Lcd_Write_String@i:	
   645                           ; 1 bytes @ 0x0
   646                           
   647                           
   648                           ; 2 bytes @ 0x0
   649  004E                     	ds	1
   650  004F                     Lcd_Set_Cursor@z:	
   651  004F                     ___lwdiv@quotient:	
   652                           ; 1 bytes @ 0x1
   653                           
   654                           
   655                           ; 2 bytes @ 0x1
   656  004F                     	ds	1
   657  0050                     Lcd_Set_Cursor@y:	
   658  0050                     Lcd_Write_String@a:	
   659                           ; 1 bytes @ 0x2
   660                           
   661                           
   662                           ; 1 bytes @ 0x2
   663  0050                     	ds	1
   664  0051                     ?___lwmod:	
   665  0051                     Lcd_Set_Cursor@temp:	
   666                           ; 2 bytes @ 0x3
   667                           
   668  0051                     ___lwmod@divisor:	
   669                           ; 1 bytes @ 0x3
   670                           
   671                           
   672                           ; 2 bytes @ 0x3
   673  0051                     	ds	2
   674  0053                     ___lwmod@dividend:	
   675                           
   676                           ; 2 bytes @ 0x5
   677  0053                     	ds	2
   678  0055                     ?_sprintf:	
   679  0055                     sprintf@f:	
   680                           ; 2 bytes @ 0x7
   681                           
   682                           
   683                           ; 1 bytes @ 0x7
   684  0055                     	ds	3
   685  0058                     ??_sprintf:	
   686                           
   687                           ; 1 bytes @ 0xA
   688  0058                     	ds	3
   689  005B                     sprintf@flag:	
   690                           
   691                           ; 1 bytes @ 0xD
   692  005B                     	ds	1
   693  005C                     sprintf@ap:	
   694                           
   695                           ; 1 bytes @ 0xE
   696  005C                     	ds	1
   697  005D                     sprintf@val:	
   698                           
   699                           ; 2 bytes @ 0xF
   700  005D                     	ds	2
   701  005F                     sprintf@sp:	
   702                           
   703                           ; 1 bytes @ 0x11
   704  005F                     	ds	1
   705  0060                     sprintf@prec:	
   706                           
   707                           ; 1 bytes @ 0x12
   708  0060                     	ds	1
   709  0061                     sprintf@c:	
   710                           
   711                           ; 1 bytes @ 0x13
   712  0061                     	ds	1
   713  0062                     ??_main:	
   714                           
   715                           ; 1 bytes @ 0x14
   716  0062                     	ds	3
   717                           
   718                           	psect	maintext
   719  0153                     __pmaintext:	
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 72 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : B00/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0
   741 ;;      Temps:          0       3       0       0       0
   742 ;;      Totals:         0       3       0       0       0
   743 ;;Total ram usage:        3 bytes
   744 ;; Hardware stack levels required when called:    4
   745 ;; This function calls:
   746 ;;		_Lcd_Init
   747 ;;		_Lcd_Set_Cursor
   748 ;;		_Lcd_Write_String
   749 ;;		_TMR0_Init
   750 ;;		___wmul
   751 ;;		_eeprom_read
   752 ;;		_eeprom_write
   753 ;;		_sprintf
   754 ;; This function is called by:
   755 ;;		Startup code after reset
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _main
   761  0153                     _main:	
   762                           
   763                           ;main.c: 73: TMR0_Init();
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   767  0153  120A  118A  2503  120A  118A  	fcall	_TMR0_Init
   768                           
   769                           ;main.c: 74:  TMR0=160;
   770  0158  30A0               	movlw	160
   771  0159  1283               	bcf	3,5	;RP0=0, select bank0
   772  015A  1303               	bcf	3,6	;RP1=0, select bank0
   773  015B  0081               	movwf	1	;volatile
   774                           
   775                           ;main.c: 75: TRISBbits.TRISB4=1;TRISBbits.TRISB5=1;TRISBbits.TRISB6=1;
   776  015C  1683               	bsf	3,5	;RP0=1, select bank1
   777  015D  1303               	bcf	3,6	;RP1=0, select bank1
   778  015E  1606               	bsf	6,4	;volatile
   779  015F  1686               	bsf	6,5	;volatile
   780  0160  1706               	bsf	6,6	;volatile
   781                           
   782                           ;main.c: 76: TRISC=0x00; PORTC=0;
   783  0161  0187               	clrf	7	;volatile
   784  0162  1283               	bcf	3,5	;RP0=0, select bank0
   785  0163  1303               	bcf	3,6	;RP1=0, select bank0
   786  0164  0187               	clrf	7	;volatile
   787                           
   788                           ;main.c: 77: TRISD=0x00; PORTD=0;
   789  0165  1683               	bsf	3,5	;RP0=1, select bank1
   790  0166  1303               	bcf	3,6	;RP1=0, select bank1
   791  0167  0188               	clrf	8	;volatile
   792  0168  1283               	bcf	3,5	;RP0=0, select bank0
   793  0169  1303               	bcf	3,6	;RP1=0, select bank0
   794  016A  0188               	clrf	8	;volatile
   795                           
   796                           ;main.c: 78: Lcd_Init();
   797  016B  120A  118A  224C  120A  118A  	fcall	_Lcd_Init
   798                           
   799                           ;main.c: 79: zaman_sayac=0;
   800  0170  1283               	bcf	3,5	;RP0=0, select bank0
   801  0171  1303               	bcf	3,6	;RP1=0, select bank0
   802  0172  01A4               	clrf	_zaman_sayac
   803                           
   804                           ;main.c: 80: zaman=1;
   805  0173  01A5               	clrf	_zaman
   806  0174  0AA5               	incf	_zaman,f
   807                           
   808                           ;main.c: 81: animasyon=1;
   809  0175  01A3               	clrf	_animasyon
   810  0176  0AA3               	incf	_animasyon,f
   811  0177                     l1786:	
   812                           
   813                           ;main.c: 85:     animasyon=eeprom_read(adres);
   814  0177  3000               	movlw	0
   815  0178  120A  118A  24CF  120A  118A  	fcall	_eeprom_read
   816  017D  1283               	bcf	3,5	;RP0=0, select bank0
   817  017E  1303               	bcf	3,6	;RP1=0, select bank0
   818  017F  00E2               	movwf	??_main
   819  0180  0862               	movf	??_main,w
   820  0181  00A3               	movwf	_animasyon
   821                           
   822                           ;main.c: 86:     if(RB4){
   823  0182  1E06               	btfss	6,4	;volatile
   824  0183  29A8               	goto	l1800
   825                           
   826                           ;main.c: 87:         animasyon++;
   827  0184  3001               	movlw	1
   828  0185  00E2               	movwf	??_main
   829  0186  0862               	movf	??_main,w
   830  0187  07A3               	addwf	_animasyon,f
   831                           
   832                           ;main.c: 88:         if(animasyon>5)animasyon=1;
   833  0188  3006               	movlw	6
   834  0189  0223               	subwf	_animasyon,w
   835  018A  1C03               	skipc
   836  018B  298E               	goto	l1796
   837  018C  01A3               	clrf	_animasyon
   838  018D  0AA3               	incf	_animasyon,f
   839  018E                     l1796:	
   840                           
   841                           ;main.c: 89:         _delay((unsigned long)((500)*(4000000/4000.0)));
   842  018E  3003               	movlw	3
   843  018F  1283               	bcf	3,5	;RP0=0, select bank0
   844  0190  1303               	bcf	3,6	;RP1=0, select bank0
   845  0191  00E4               	movwf	??_main+2
   846  0192  308A               	movlw	138
   847  0193  00E3               	movwf	??_main+1
   848  0194  3055               	movlw	85
   849  0195  00E2               	movwf	??_main
   850  0196                     u1517:	
   851  0196  0BE2               	decfsz	??_main,f
   852  0197  2996               	goto	u1517
   853  0198  0BE3               	decfsz	??_main+1,f
   854  0199  2996               	goto	u1517
   855  019A  0BE4               	decfsz	??_main+2,f
   856  019B  2996               	goto	u1517
   857                           
   858                           ;main.c: 90:         eeprom_write(adres,animasyon);
   859  019C  1283               	bcf	3,5	;RP0=0, select bank0
   860  019D  1303               	bcf	3,6	;RP1=0, select bank0
   861  019E  0823               	movf	_animasyon,w
   862  019F  00E2               	movwf	??_main
   863  01A0  0862               	movf	??_main,w
   864  01A1  00F3               	movwf	eeprom_write@value
   865  01A2  3000               	movlw	0
   866  01A3  120A  118A  2432  120A  118A  	fcall	_eeprom_write
   867  01A8                     l1800:	
   868                           
   869                           ;main.c: 92:     zaman=eeprom_read(adres2);
   870  01A8  3010               	movlw	16
   871  01A9  120A  118A  24CF  120A  118A  	fcall	_eeprom_read
   872  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   873  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   874  01B0  00E2               	movwf	??_main
   875  01B1  0862               	movf	??_main,w
   876  01B2  00A5               	movwf	_zaman
   877                           
   878                           ;main.c: 93:     if(RB5){
   879  01B3  1E86               	btfss	6,5	;volatile
   880  01B4  29CF               	goto	l1810
   881                           
   882                           ;main.c: 94:         zaman++;
   883  01B5  3001               	movlw	1
   884  01B6  00E2               	movwf	??_main
   885  01B7  0862               	movf	??_main,w
   886  01B8  07A5               	addwf	_zaman,f
   887                           
   888                           ;main.c: 95:         if(zaman>10) zaman=10;
   889  01B9  300B               	movlw	11
   890  01BA  0225               	subwf	_zaman,w
   891  01BB  1C03               	skipc
   892  01BC  29C1               	goto	l147
   893  01BD  300A               	movlw	10
   894  01BE  00E2               	movwf	??_main
   895  01BF  0862               	movf	??_main,w
   896  01C0  00A5               	movwf	_zaman
   897  01C1                     l147:	
   898                           
   899                           ;main.c: 96:          _delay((unsigned long)((500)*(4000000/4000.0)));
   900  01C1  3003               	movlw	3
   901  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   902  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   903  01C4  00E4               	movwf	??_main+2
   904  01C5  308A               	movlw	138
   905  01C6  00E3               	movwf	??_main+1
   906  01C7  3055               	movlw	85
   907  01C8  00E2               	movwf	??_main
   908  01C9                     u1527:	
   909  01C9  0BE2               	decfsz	??_main,f
   910  01CA  29C9               	goto	u1527
   911  01CB  0BE3               	decfsz	??_main+1,f
   912  01CC  29C9               	goto	u1527
   913  01CD  0BE4               	decfsz	??_main+2,f
   914  01CE  29C9               	goto	u1527
   915  01CF                     l1810:	
   916                           
   917                           ;main.c: 98:     if(RB6){
   918  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   919  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   920  01D1  1F06               	btfss	6,6	;volatile
   921  01D2  29E8               	goto	l1818
   922                           
   923                           ;main.c: 99:          zaman--;
   924  01D3  3001               	movlw	1
   925  01D4  02A5               	subwf	_zaman,f
   926                           
   927                           ;main.c: 100:         if(zaman<1) zaman=1;
   928  01D5  0825               	movf	_zaman,w
   929  01D6  1D03               	btfss	3,2
   930  01D7  29DA               	goto	l1816
   931  01D8  01A5               	clrf	_zaman
   932  01D9  0AA5               	incf	_zaman,f
   933  01DA                     l1816:	
   934                           
   935                           ;main.c: 101:          _delay((unsigned long)((500)*(4000000/4000.0)));
   936  01DA  3003               	movlw	3
   937  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   938  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   939  01DD  00E4               	movwf	??_main+2
   940  01DE  308A               	movlw	138
   941  01DF  00E3               	movwf	??_main+1
   942  01E0  3055               	movlw	85
   943  01E1  00E2               	movwf	??_main
   944  01E2                     u1537:	
   945  01E2  0BE2               	decfsz	??_main,f
   946  01E3  29E2               	goto	u1537
   947  01E4  0BE3               	decfsz	??_main+1,f
   948  01E5  29E2               	goto	u1537
   949  01E6  0BE4               	decfsz	??_main+2,f
   950  01E7  29E2               	goto	u1537
   951  01E8                     l1818:	
   952                           
   953                           ;main.c: 103:          eeprom_write(adres2,zaman);
   954  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   955  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   956  01EA  0825               	movf	_zaman,w
   957  01EB  00E2               	movwf	??_main
   958  01EC  0862               	movf	??_main,w
   959  01ED  00F3               	movwf	eeprom_write@value
   960  01EE  3010               	movlw	16
   961  01EF  120A  118A  2432  120A  118A  	fcall	_eeprom_write
   962                           
   963                           ;main.c: 106:     zaman_goster = zaman*100;
   964  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   965  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   966  01F6  0825               	movf	_zaman,w
   967  01F7  00E2               	movwf	??_main
   968  01F8  01E3               	clrf	??_main+1
   969  01F9  0862               	movf	??_main,w
   970  01FA  00F3               	movwf	___wmul@multiplier
   971  01FB  0863               	movf	??_main+1,w
   972  01FC  00F4               	movwf	___wmul@multiplier+1
   973  01FD  3064               	movlw	100
   974  01FE  00F5               	movwf	___wmul@multiplicand
   975  01FF  3000               	movlw	0
   976  0200  00F6               	movwf	___wmul@multiplicand+1
   977  0201  120A  118A  247A  120A  118A  	fcall	___wmul
   978  0206  0874               	movf	?___wmul+1,w
   979  0207  1283               	bcf	3,5	;RP0=0, select bank0
   980  0208  1303               	bcf	3,6	;RP1=0, select bank0
   981  0209  00A1               	movwf	_zaman_goster+1
   982  020A  0873               	movf	?___wmul,w
   983  020B  00A0               	movwf	_zaman_goster
   984                           
   985                           ;main.c: 107:     Lcd_Set_Cursor(1,1);
   986  020C  01F7               	clrf	Lcd_Set_Cursor@b
   987  020D  0AF7               	incf	Lcd_Set_Cursor@b,f
   988  020E  3001               	movlw	1
   989  020F  120A  118A  22A7  120A  118A  	fcall	_Lcd_Set_Cursor
   990                           
   991                           ;main.c: 108:      sprintf (dizi,"zaman = %.2u ms ",zaman_goster);
   992  0214  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   993  0215  1283               	bcf	3,5	;RP0=0, select bank0
   994  0216  1303               	bcf	3,6	;RP1=0, select bank0
   995  0217  00E2               	movwf	??_main
   996  0218  0862               	movf	??_main,w
   997  0219  00D5               	movwf	sprintf@f
   998  021A  0821               	movf	_zaman_goster+1,w
   999  021B  00D7               	movwf	?_sprintf+2
  1000  021C  0820               	movf	_zaman_goster,w
  1001  021D  00D6               	movwf	?_sprintf+1
  1002  021E  3026               	movlw	(low (_dizi| 0))& (0+255)
  1003  021F  120A  118A  2021  120A  118A  	fcall	_sprintf
  1004                           
  1005                           ;main.c: 109:      Lcd_Write_String(dizi);
  1006  0224  3026               	movlw	(low (_dizi| 0))& (0+255)
  1007  0225  120A  118A  2458  120A  118A  	fcall	_Lcd_Write_String
  1008                           
  1009                           ;main.c: 111:     Lcd_Set_Cursor(2,1);
  1010  022A  01F7               	clrf	Lcd_Set_Cursor@b
  1011  022B  0AF7               	incf	Lcd_Set_Cursor@b,f
  1012  022C  3002               	movlw	2
  1013  022D  120A  118A  22A7  120A  118A  	fcall	_Lcd_Set_Cursor
  1014                           
  1015                           ;main.c: 112:      sprintf (dizi,"animasyon = %u  ",animasyon);
  1016  0232  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1017  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0235  00E2               	movwf	??_main
  1020  0236  0862               	movf	??_main,w
  1021  0237  00D5               	movwf	sprintf@f
  1022  0238  0823               	movf	_animasyon,w
  1023  0239  00E3               	movwf	??_main+1
  1024  023A  01E4               	clrf	??_main+2
  1025  023B  0863               	movf	??_main+1,w
  1026  023C  00D6               	movwf	?_sprintf+1
  1027  023D  0864               	movf	??_main+2,w
  1028  023E  00D7               	movwf	?_sprintf+2
  1029  023F  3026               	movlw	(low (_dizi| 0))& (0+255)
  1030  0240  120A  118A  2021  120A  118A  	fcall	_sprintf
  1031                           
  1032                           ;main.c: 113:      Lcd_Write_String(dizi);
  1033  0245  3026               	movlw	(low (_dizi| 0))& (0+255)
  1034  0246  120A  118A  2458  120A  118A  	fcall	_Lcd_Write_String
  1035  024B  2977               	goto	l1786
  1036  024C                     __end_of_main:	
  1037                           
  1038                           	psect	text1
  1039  0021                     __ptext1:	
  1040 ;; *************** function _sprintf *****************
  1041 ;; Defined at:
  1042 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  sp              1    wreg     PTR unsigned char 
  1045 ;;		 -> dizi(40), 
  1046 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  1047 ;;		 -> STR_2(17), STR_1(17), 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1050 ;;		 -> dizi(40), 
  1051 ;;  tmpval          4    0        struct .
  1052 ;;  val             2   15[BANK0 ] unsigned int 
  1053 ;;  cp              2    0        PTR const unsigned char 
  1054 ;;  len             2    0        unsigned int 
  1055 ;;  c               1   19[BANK0 ] unsigned char 
  1056 ;;  prec            1   18[BANK0 ] char 
  1057 ;;  ap              1   14[BANK0 ] PTR void [1]
  1058 ;;		 -> ?_sprintf(2), 
  1059 ;;  flag            1   13[BANK0 ] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  2    7[BANK0 ] int 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       3       0       0       0
  1070 ;;      Locals:         0       7       0       0       0
  1071 ;;      Temps:          0       3       0       0       0
  1072 ;;      Totals:         0      13       0       0       0
  1073 ;;Total ram usage:       13 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    2
  1076 ;; This function calls:
  1077 ;;		___bmul
  1078 ;;		___lwdiv
  1079 ;;		___lwmod
  1080 ;;		_isdigit
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           
  1087                           ;psect for function _sprintf
  1088  0021                     _sprintf:	
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1092                           ;sprintf@sp stored from wreg
  1093  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0023  00DF               	movwf	sprintf@sp
  1096                           
  1097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1098  0024  3056               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1099  0025  00D8               	movwf	??_sprintf
  1100  0026  0858               	movf	??_sprintf,w
  1101  0027  00DC               	movwf	sprintf@ap
  1102  0028                     l1752:	
  1103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1104                           
  1105                           
  1106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1107  0028  3001               	movlw	1
  1108  0029  07D5               	addwf	sprintf@f,f
  1109  002A  30FF               	movlw	-1
  1110  002B  0755               	addwf	sprintf@f,w
  1111  002C  0084               	movwf	4
  1112  002D  120A  118A  2400  120A  118A  	fcall	stringdir
  1113  0032  00D8               	movwf	??_sprintf
  1114  0033  0858               	movf	??_sprintf,w
  1115  0034  00E1               	movwf	sprintf@c
  1116  0035  0861               	movf	sprintf@c,w
  1117  0036  1903               	btfsc	3,2
  1118  0037  294E               	goto	l1754
  1119                           
  1120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1121  0038  3025               	movlw	37
  1122  0039  0661               	xorwf	sprintf@c,w
  1123  003A  1903               	btfsc	3,2
  1124  003B  2848               	goto	l1694
  1125                           
  1126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1127  003C  0861               	movf	sprintf@c,w
  1128  003D  00D8               	movwf	??_sprintf
  1129  003E  085F               	movf	sprintf@sp,w
  1130  003F  0084               	movwf	4
  1131  0040  0858               	movf	??_sprintf,w
  1132  0041  1383               	bcf	3,7	;select IRP bank0
  1133  0042  0080               	movwf	0
  1134  0043  3001               	movlw	1
  1135  0044  00D8               	movwf	??_sprintf
  1136  0045  0858               	movf	??_sprintf,w
  1137  0046  07DF               	addwf	sprintf@sp,f
  1138                           
  1139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1140  0047  2828               	goto	l1752
  1141  0048                     l1694:	
  1142                           
  1143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1144  0048  01DB               	clrf	sprintf@flag
  1145                           
  1146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1147  0049  0855               	movf	sprintf@f,w
  1148  004A  0084               	movwf	4
  1149  004B  120A  118A  2400  120A  118A  	fcall	stringdir
  1150  0050  3A2E               	xorlw	46
  1151  0051  1D03               	skipz
  1152  0052  2886               	goto	l1708
  1153                           
  1154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1155  0053  3001               	movlw	1
  1156  0054  00D8               	movwf	??_sprintf
  1157  0055  0858               	movf	??_sprintf,w
  1158  0056  07D5               	addwf	sprintf@f,f
  1159                           
  1160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1161  0057  01E0               	clrf	sprintf@prec
  1162  0058                     l1706:	
  1163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1164                           
  1165                           
  1166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1167  0058  0855               	movf	sprintf@f,w
  1168  0059  0084               	movwf	4
  1169  005A  120A  118A  2400  120A  118A  	fcall	stringdir
  1170  005F  120A  118A  24F5  120A  118A  	fcall	_isdigit
  1171  0064  1C03               	btfss	3,0
  1172  0065  288D               	goto	l1714
  1173                           
  1174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1175  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0068  0855               	movf	sprintf@f,w
  1178  0069  0084               	movwf	4
  1179  006A  120A  118A  2400  120A  118A  	fcall	stringdir
  1180  006F  00D8               	movwf	??_sprintf
  1181  0070  300A               	movlw	10
  1182  0071  00D9               	movwf	??_sprintf+1
  1183  0072  0859               	movf	??_sprintf+1,w
  1184  0073  00F3               	movwf	___bmul@multiplicand
  1185  0074  0860               	movf	sprintf@prec,w
  1186  0075  120A  118A  24E4  120A  118A  	fcall	___bmul
  1187  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1188  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1189  007C  0758               	addwf	??_sprintf,w
  1190  007D  3ED0               	addlw	-48
  1191  007E  00DA               	movwf	??_sprintf+2
  1192  007F  085A               	movf	??_sprintf+2,w
  1193  0080  00E0               	movwf	sprintf@prec
  1194  0081  3001               	movlw	1
  1195  0082  00D8               	movwf	??_sprintf
  1196  0083  0858               	movf	??_sprintf,w
  1197  0084  07D5               	addwf	sprintf@f,f
  1198  0085  2858               	goto	l1706
  1199  0086                     l1708:	
  1200                           
  1201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1202  0086  01E0               	clrf	sprintf@prec
  1203  0087  288D               	goto	l1714
  1204  0088                     l1710:	
  1205                           
  1206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 837:    fla
      +                          g |= 0xC0;
  1207  0088  30C0               	movlw	192
  1208  0089  00D8               	movwf	??_sprintf
  1209  008A  0858               	movf	??_sprintf,w
  1210  008B  04DB               	iorwf	sprintf@flag,f
  1211                           
  1212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 838:    bre
      +                          ak;
  1213  008C  28A9               	goto	l1716
  1214  008D                     l1714:	
  1215  008D  3001               	movlw	1
  1216  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1217  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0090  07D5               	addwf	sprintf@f,f
  1219  0091  30FF               	movlw	-1
  1220  0092  0755               	addwf	sprintf@f,w
  1221  0093  0084               	movwf	4
  1222  0094  120A  118A  2400  120A  118A  	fcall	stringdir
  1223  0099  00E1               	movwf	sprintf@c
  1224  009A  00D8               	movwf	??_sprintf
  1225  009B  01D9               	clrf	??_sprintf+1
  1226                           
  1227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 1, Range of values is 0 to 0
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte            4     3 (average)
  1233                           ; direct_byte           11     8 (fixed)
  1234                           ; jumptable            260     6 (fixed)
  1235                           ;	Chosen strategy is simple_byte
  1236  009C  0859               	movf	??_sprintf+1,w
  1237  009D  3A00               	xorlw	0	; case 0
  1238  009E  1903               	skipnz
  1239  009F  28A1               	goto	l1854
  1240  00A0  2828               	goto	l1752
  1241  00A1                     l1854:	
  1242                           
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 2, Range of values is 0 to 117
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte            7     4 (average)
  1248                           ; jumptable            260     6 (fixed)
  1249                           ;	Chosen strategy is simple_byte
  1250  00A1  0858               	movf	??_sprintf,w
  1251  00A2  3A00               	xorlw	0	; case 0
  1252  00A3  1903               	skipnz
  1253  00A4  294E               	goto	l1754
  1254  00A5  3A75               	xorlw	117	; case 117
  1255  00A6  1903               	skipnz
  1256  00A7  2888               	goto	l1710
  1257  00A8  2828               	goto	l1752
  1258  00A9                     l1716:	
  1259                           
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1292:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1305:     val
      +                           = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1261  00A9  085C               	movf	sprintf@ap,w
  1262  00AA  0084               	movwf	4
  1263  00AB  1383               	bcf	3,7	;select IRP bank0
  1264  00AC  0800               	movf	0,w
  1265  00AD  00DD               	movwf	sprintf@val
  1266  00AE  0A84               	incf	4,f
  1267  00AF  0800               	movf	0,w
  1268  00B0  00DE               	movwf	sprintf@val+1
  1269  00B1  3002               	movlw	2
  1270  00B2  00D8               	movwf	??_sprintf
  1271  00B3  0858               	movf	??_sprintf,w
  1272  00B4  07DC               	addwf	sprintf@ap,f
  1273                           
  1274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1306:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(pr
      +                          ec == 0 && val == 0)
  1275  00B5  0860               	movf	sprintf@prec,w
  1276  00B6  1D03               	btfss	3,2
  1277  00B7  28C0               	goto	l1726
  1278  00B8  085D               	movf	sprintf@val,w
  1279  00B9  045E               	iorwf	sprintf@val+1,w
  1280  00BA  1D03               	btfss	3,2
  1281  00BB  28C0               	goto	l1726
  1282                           
  1283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  1284  00BC  3001               	movlw	1
  1285  00BD  00D8               	movwf	??_sprintf
  1286  00BE  0858               	movf	??_sprintf,w
  1287  00BF  07E0               	addwf	sprintf@prec,f
  1288  00C0                     l1726:	
  1289                           
  1290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1291  00C0  01E1               	clrf	sprintf@c
  1292  00C1  0AE1               	incf	sprintf@c,f
  1293  00C2                     l1730:	
  1294                           
  1295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1296  00C2  0861               	movf	sprintf@c,w
  1297  00C3  00D8               	movwf	??_sprintf
  1298  00C4  0758               	addwf	??_sprintf,w
  1299  00C5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1300  00C6  0084               	movwf	4
  1301  00C7  120A  118A  2400  120A  118A  	fcall	stringdir
  1302  00CC  00D9               	movwf	??_sprintf+1
  1303  00CD  120A  118A  2400  120A  118A  	fcall	stringdir
  1304  00D2  00DA               	movwf	??_sprintf+2
  1305  00D3  085A               	movf	??_sprintf+2,w
  1306  00D4  025E               	subwf	sprintf@val+1,w
  1307  00D5  1D03               	skipz
  1308  00D6  28D9               	goto	u1395
  1309  00D7  0859               	movf	??_sprintf+1,w
  1310  00D8  025D               	subwf	sprintf@val,w
  1311  00D9                     u1395:	
  1312  00D9  1C03               	btfss	3,0
  1313  00DA  28E3               	goto	l1736
  1314  00DB  3001               	movlw	1
  1315  00DC  00D8               	movwf	??_sprintf
  1316  00DD  0858               	movf	??_sprintf,w
  1317  00DE  07E1               	addwf	sprintf@c,f
  1318  00DF  3005               	movlw	5
  1319  00E0  0661               	xorwf	sprintf@c,w
  1320  00E1  1D03               	btfss	3,2
  1321  00E2  28C2               	goto	l1730
  1322  00E3                     l1736:	
  1323                           
  1324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  1325  00E3  0860               	movf	sprintf@prec,w
  1326  00E4  00D8               	movwf	??_sprintf
  1327  00E5  01D9               	clrf	??_sprintf+1
  1328  00E6  1BD8               	btfsc	??_sprintf,7
  1329  00E7  03D9               	decf	??_sprintf+1,f
  1330  00E8  0859               	movf	??_sprintf+1,w
  1331  00E9  3A80               	xorlw	128
  1332  00EA  3C80               	sublw	128
  1333  00EB  1D03               	skipz
  1334  00EC  28EF               	goto	u1415
  1335  00ED  0858               	movf	??_sprintf,w
  1336  00EE  0261               	subwf	sprintf@c,w
  1337  00EF                     u1415:	
  1338  00EF  1C03               	btfss	3,0
  1339  00F0  2909               	goto	l1750
  1340  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1341  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1342  00F3  0860               	movf	sprintf@prec,w
  1343  00F4  00D8               	movwf	??_sprintf
  1344  00F5  01D9               	clrf	??_sprintf+1
  1345  00F6  1BD8               	btfsc	??_sprintf,7
  1346  00F7  03D9               	decf	??_sprintf+1,f
  1347  00F8  0859               	movf	??_sprintf+1,w
  1348  00F9  3A80               	xorlw	128
  1349  00FA  00DA               	movwf	??_sprintf+2
  1350  00FB  3080               	movlw	128
  1351  00FC  025A               	subwf	??_sprintf+2,w
  1352  00FD  1D03               	skipz
  1353  00FE  2901               	goto	u1425
  1354  00FF  0861               	movf	sprintf@c,w
  1355  0100  0258               	subwf	??_sprintf,w
  1356  0101                     u1425:	
  1357  0101  1803               	skipnc
  1358  0102  2909               	goto	l1750
  1359                           
  1360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1361:    pr
      +                          ec = c;
  1361  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0105  0861               	movf	sprintf@c,w
  1364  0106  00D8               	movwf	??_sprintf
  1365  0107  0858               	movf	??_sprintf,w
  1366  0108  00E0               	movwf	sprintf@prec
  1367  0109                     l1750:	
  1368                           
  1369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1370  0109  30FF               	movlw	255
  1371  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1372  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1373  010C  00D8               	movwf	??_sprintf
  1374  010D  0858               	movf	??_sprintf,w
  1375  010E  07E0               	addwf	sprintf@prec,f
  1376  010F  0A60               	incf	sprintf@prec,w
  1377  0110  1903               	btfsc	3,2
  1378  0111  2828               	goto	l1752
  1379                           
  1380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1381  0112  300A               	movlw	10
  1382  0113  00D1               	movwf	___lwmod@divisor
  1383  0114  3000               	movlw	0
  1384  0115  00D2               	movwf	___lwmod@divisor+1
  1385  0116  0860               	movf	sprintf@prec,w
  1386  0117  00D8               	movwf	??_sprintf
  1387  0118  0758               	addwf	??_sprintf,w
  1388  0119  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1389  011A  0084               	movwf	4
  1390  011B  120A  118A  2400  120A  118A  	fcall	stringdir
  1391  0120  00F3               	movwf	___lwdiv@divisor
  1392  0121  120A  118A  2400  120A  118A  	fcall	stringdir
  1393  0126  00F4               	movwf	___lwdiv@divisor+1
  1394  0127  085E               	movf	sprintf@val+1,w
  1395  0128  00F6               	movwf	___lwdiv@dividend+1
  1396  0129  085D               	movf	sprintf@val,w
  1397  012A  00F5               	movwf	___lwdiv@dividend
  1398  012B  120A  118A  233B  120A  118A  	fcall	___lwdiv
  1399  0130  0874               	movf	?___lwdiv+1,w
  1400  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0133  00D4               	movwf	___lwmod@dividend+1
  1403  0134  0873               	movf	?___lwdiv,w
  1404  0135  00D3               	movwf	___lwmod@dividend
  1405  0136  120A  118A  23B0  120A  118A  	fcall	___lwmod
  1406  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1407  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1408  013D  0851               	movf	?___lwmod,w
  1409  013E  3E30               	addlw	48
  1410  013F  00D9               	movwf	??_sprintf+1
  1411  0140  0859               	movf	??_sprintf+1,w
  1412  0141  00E1               	movwf	sprintf@c
  1413                           
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1415  0142  0861               	movf	sprintf@c,w
  1416  0143  00D8               	movwf	??_sprintf
  1417  0144  085F               	movf	sprintf@sp,w
  1418  0145  0084               	movwf	4
  1419  0146  0858               	movf	??_sprintf,w
  1420  0147  1383               	bcf	3,7	;select IRP bank0
  1421  0148  0080               	movwf	0
  1422  0149  3001               	movlw	1
  1423  014A  00D8               	movwf	??_sprintf
  1424  014B  0858               	movf	??_sprintf,w
  1425  014C  07DF               	addwf	sprintf@sp,f
  1426  014D  2909               	goto	l1750
  1427  014E                     l1754:	
  1428                           
  1429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1430  014E  085F               	movf	sprintf@sp,w
  1431  014F  0084               	movwf	4
  1432  0150  1383               	bcf	3,7	;select IRP bank0
  1433  0151  0180               	clrf	0
  1434  0152  0008               	return
  1435  0153                     __end_of_sprintf:	
  1436                           
  1437                           	psect	text2
  1438  04F5                     __ptext2:	
  1439 ;; *************** function _isdigit *****************
  1440 ;; Defined at:
  1441 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  c               1    wreg     unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  c               1    4[COMMON] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;		None               void
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         2       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         2       0       0       0       0
  1459 ;;Total ram usage:        2 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_sprintf
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _isdigit
  1471  04F5                     _isdigit:	
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1475                           ;isdigit@c stored from wreg
  1476  04F5  00F4               	movwf	isdigit@c
  1477  04F6  01F3               	clrf	_isdigit$709
  1478  04F7  303A               	movlw	58
  1479  04F8  0274               	subwf	isdigit@c,w
  1480  04F9  1803               	skipnc
  1481  04FA  2D01               	goto	l1278
  1482  04FB  3030               	movlw	48
  1483  04FC  0274               	subwf	isdigit@c,w
  1484  04FD  1C03               	skipc
  1485  04FE  2D01               	goto	l1278
  1486  04FF  01F3               	clrf	_isdigit$709
  1487  0500  0AF3               	incf	_isdigit$709,f
  1488  0501                     l1278:	
  1489  0501  0C73               	rrf	_isdigit$709,w
  1490  0502  0008               	return
  1491  0503                     __end_of_isdigit:	
  1492                           
  1493                           	psect	text3
  1494  03B0                     __ptext3:	
  1495 ;; *************** function ___lwmod *****************
  1496 ;; Defined at:
  1497 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  divisor         2    3[BANK0 ] unsigned int 
  1500 ;;  dividend        2    5[BANK0 ] unsigned int 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  counter         1    9[COMMON] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  2    3[BANK0 ] unsigned int 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       4       0       0       0
  1513 ;;      Locals:         1       0       0       0       0
  1514 ;;      Temps:          1       0       0       0       0
  1515 ;;      Totals:         2       4       0       0       0
  1516 ;;Total ram usage:        6 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_sprintf
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function ___lwmod
  1528  03B0                     ___lwmod:	
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1532  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1533  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1534  03B2  0851               	movf	___lwmod@divisor,w
  1535  03B3  0452               	iorwf	___lwmod@divisor+1,w
  1536  03B4  1903               	btfsc	3,2
  1537  03B5  2BDF               	goto	l1682
  1538  03B6  01F9               	clrf	___lwmod@counter
  1539  03B7  0AF9               	incf	___lwmod@counter,f
  1540  03B8                     l1672:	
  1541  03B8  1BD2               	btfsc	___lwmod@divisor+1,7
  1542  03B9  2BC6               	goto	l1674
  1543  03BA  3001               	movlw	1
  1544  03BB                     u1295:	
  1545  03BB  1003               	clrc
  1546  03BC  0DD1               	rlf	___lwmod@divisor,f
  1547  03BD  0DD2               	rlf	___lwmod@divisor+1,f
  1548  03BE  3EFF               	addlw	-1
  1549  03BF  1D03               	skipz
  1550  03C0  2BBB               	goto	u1295
  1551  03C1  3001               	movlw	1
  1552  03C2  00F8               	movwf	??___lwmod
  1553  03C3  0878               	movf	??___lwmod,w
  1554  03C4  07F9               	addwf	___lwmod@counter,f
  1555  03C5  2BB8               	goto	l1672
  1556  03C6                     l1674:	
  1557  03C6  0852               	movf	___lwmod@divisor+1,w
  1558  03C7  0254               	subwf	___lwmod@dividend+1,w
  1559  03C8  1D03               	skipz
  1560  03C9  2BCC               	goto	u1315
  1561  03CA  0851               	movf	___lwmod@divisor,w
  1562  03CB  0253               	subwf	___lwmod@dividend,w
  1563  03CC                     u1315:	
  1564  03CC  1C03               	skipc
  1565  03CD  2BD4               	goto	l1678
  1566  03CE  0851               	movf	___lwmod@divisor,w
  1567  03CF  02D3               	subwf	___lwmod@dividend,f
  1568  03D0  0852               	movf	___lwmod@divisor+1,w
  1569  03D1  1C03               	skipc
  1570  03D2  03D4               	decf	___lwmod@dividend+1,f
  1571  03D3  02D4               	subwf	___lwmod@dividend+1,f
  1572  03D4                     l1678:	
  1573  03D4  3001               	movlw	1
  1574  03D5                     u1325:	
  1575  03D5  1003               	clrc
  1576  03D6  0CD2               	rrf	___lwmod@divisor+1,f
  1577  03D7  0CD1               	rrf	___lwmod@divisor,f
  1578  03D8  3EFF               	addlw	-1
  1579  03D9  1D03               	skipz
  1580  03DA  2BD5               	goto	u1325
  1581  03DB  3001               	movlw	1
  1582  03DC  02F9               	subwf	___lwmod@counter,f
  1583  03DD  1D03               	btfss	3,2
  1584  03DE  2BC6               	goto	l1674
  1585  03DF                     l1682:	
  1586  03DF  0854               	movf	___lwmod@dividend+1,w
  1587  03E0  00D2               	movwf	?___lwmod+1
  1588  03E1  0853               	movf	___lwmod@dividend,w
  1589  03E2  00D1               	movwf	?___lwmod
  1590  03E3  0008               	return
  1591  03E4                     __end_of___lwmod:	
  1592                           
  1593                           	psect	text4
  1594  033B                     __ptext4:	
  1595 ;; *************** function ___lwdiv *****************
  1596 ;; Defined at:
  1597 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  divisor         2    3[COMMON] unsigned int 
  1600 ;;  dividend        2    5[COMMON] unsigned int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  quotient        2    1[BANK0 ] unsigned int 
  1603 ;;  counter         1    0[BANK0 ] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  2    3[COMMON] unsigned int 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         4       0       0       0       0
  1614 ;;      Locals:         0       3       0       0       0
  1615 ;;      Temps:          1       0       0       0       0
  1616 ;;      Totals:         5       3       0       0       0
  1617 ;;Total ram usage:        8 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_sprintf
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function ___lwdiv
  1629  033B                     ___lwdiv:	
  1630                           
  1631                           ;incstack = 0
  1632                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1633  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1634  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1635  033D  01CF               	clrf	___lwdiv@quotient
  1636  033E  01D0               	clrf	___lwdiv@quotient+1
  1637  033F  0873               	movf	___lwdiv@divisor,w
  1638  0340  0474               	iorwf	___lwdiv@divisor+1,w
  1639  0341  1903               	btfsc	3,2
  1640  0342  2B74               	goto	l1660
  1641  0343  01CE               	clrf	___lwdiv@counter
  1642  0344  0ACE               	incf	___lwdiv@counter,f
  1643  0345                     l1648:	
  1644  0345  1BF4               	btfsc	___lwdiv@divisor+1,7
  1645  0346  2B53               	goto	l1650
  1646  0347  3001               	movlw	1
  1647  0348                     u1225:	
  1648  0348  1003               	clrc
  1649  0349  0DF3               	rlf	___lwdiv@divisor,f
  1650  034A  0DF4               	rlf	___lwdiv@divisor+1,f
  1651  034B  3EFF               	addlw	-1
  1652  034C  1D03               	skipz
  1653  034D  2B48               	goto	u1225
  1654  034E  3001               	movlw	1
  1655  034F  00F7               	movwf	??___lwdiv
  1656  0350  0877               	movf	??___lwdiv,w
  1657  0351  07CE               	addwf	___lwdiv@counter,f
  1658  0352  2B45               	goto	l1648
  1659  0353                     l1650:	
  1660  0353  3001               	movlw	1
  1661  0354                     u1245:	
  1662  0354  1003               	clrc
  1663  0355  0DCF               	rlf	___lwdiv@quotient,f
  1664  0356  0DD0               	rlf	___lwdiv@quotient+1,f
  1665  0357  3EFF               	addlw	-1
  1666  0358  1D03               	skipz
  1667  0359  2B54               	goto	u1245
  1668  035A  0874               	movf	___lwdiv@divisor+1,w
  1669  035B  0276               	subwf	___lwdiv@dividend+1,w
  1670  035C  1D03               	skipz
  1671  035D  2B60               	goto	u1255
  1672  035E  0873               	movf	___lwdiv@divisor,w
  1673  035F  0275               	subwf	___lwdiv@dividend,w
  1674  0360                     u1255:	
  1675  0360  1C03               	skipc
  1676  0361  2B69               	goto	l1656
  1677  0362  0873               	movf	___lwdiv@divisor,w
  1678  0363  02F5               	subwf	___lwdiv@dividend,f
  1679  0364  0874               	movf	___lwdiv@divisor+1,w
  1680  0365  1C03               	skipc
  1681  0366  03F6               	decf	___lwdiv@dividend+1,f
  1682  0367  02F6               	subwf	___lwdiv@dividend+1,f
  1683  0368  144F               	bsf	___lwdiv@quotient,0
  1684  0369                     l1656:	
  1685  0369  3001               	movlw	1
  1686  036A                     u1265:	
  1687  036A  1003               	clrc
  1688  036B  0CF4               	rrf	___lwdiv@divisor+1,f
  1689  036C  0CF3               	rrf	___lwdiv@divisor,f
  1690  036D  3EFF               	addlw	-1
  1691  036E  1D03               	skipz
  1692  036F  2B6A               	goto	u1265
  1693  0370  3001               	movlw	1
  1694  0371  02CE               	subwf	___lwdiv@counter,f
  1695  0372  1D03               	btfss	3,2
  1696  0373  2B53               	goto	l1650
  1697  0374                     l1660:	
  1698  0374  0850               	movf	___lwdiv@quotient+1,w
  1699  0375  00F4               	movwf	?___lwdiv+1
  1700  0376  084F               	movf	___lwdiv@quotient,w
  1701  0377  00F3               	movwf	?___lwdiv
  1702  0378  0008               	return
  1703  0379                     __end_of___lwdiv:	
  1704                           
  1705                           	psect	text5
  1706  04E4                     __ptext5:	
  1707 ;; *************** function ___bmul *****************
  1708 ;; Defined at:
  1709 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  multiplier      1    wreg     unsigned char 
  1712 ;;  multiplicand    1    3[COMMON] unsigned char 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  multiplier      1    6[COMMON] unsigned char 
  1715 ;;  product         1    5[COMMON] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         1       0       0       0       0
  1726 ;;      Locals:         2       0       0       0       0
  1727 ;;      Temps:          1       0       0       0       0
  1728 ;;      Totals:         4       0       0       0       0
  1729 ;;Total ram usage:        4 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_sprintf
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function ___bmul
  1741  04E4                     ___bmul:	
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1745                           ;___bmul@multiplier stored from wreg
  1746  04E4  00F6               	movwf	___bmul@multiplier
  1747  04E5  01F5               	clrf	___bmul@product
  1748  04E6                     l1284:	
  1749  04E6  1C76               	btfss	___bmul@multiplier,0
  1750  04E7  2CEC               	goto	l1288
  1751  04E8  0873               	movf	___bmul@multiplicand,w
  1752  04E9  00F4               	movwf	??___bmul
  1753  04EA  0874               	movf	??___bmul,w
  1754  04EB  07F5               	addwf	___bmul@product,f
  1755  04EC                     l1288:	
  1756  04EC  1003               	clrc
  1757  04ED  0DF3               	rlf	___bmul@multiplicand,f
  1758  04EE  1003               	clrc
  1759  04EF  0CF6               	rrf	___bmul@multiplier,f
  1760  04F0  0876               	movf	___bmul@multiplier,w
  1761  04F1  1D03               	btfss	3,2
  1762  04F2  2CE6               	goto	l1284
  1763  04F3  0875               	movf	___bmul@product,w
  1764  04F4  0008               	return
  1765  04F5                     __end_of___bmul:	
  1766                           
  1767                           	psect	text6
  1768  0432                     __ptext6:	
  1769 ;; *************** function _eeprom_write *****************
  1770 ;; Defined at:
  1771 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eewrite.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  addr            1    wreg     unsigned char 
  1774 ;;  value           1    3[COMMON] unsigned char 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  addr            1    5[COMMON] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         1       0       0       0       0
  1787 ;;      Locals:         1       0       0       0       0
  1788 ;;      Temps:          1       0       0       0       0
  1789 ;;      Totals:         3       0       0       0       0
  1790 ;;Total ram usage:        3 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _eeprom_write
  1802  0432                     _eeprom_write:	
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1806                           ;eeprom_write@addr stored from wreg
  1807  0432  00F5               	movwf	eeprom_write@addr
  1808  0433                     l265:	
  1809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eewrite.c: 6: eeprom_w
      +                          rite(unsigned char addr, unsigned char value);C:\Program Files (x86)\Microchip\xc8\v2.05
      +                          \pic\sources\c90\pic\__eewrite.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\so
      +                          urces\c90\pic\__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); E
      +                          EDATA = (value); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.
      +                          CARRY = 1; } INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECO
      +                          N1bits.WR = 1; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } whil
      +                          e (0);
  1810                           
  1811  0433  1683               	bsf	3,5	;RP0=1, select bank3
  1812  0434  1703               	bsf	3,6	;RP1=1, select bank3
  1813  0435  188C               	btfsc	12,1	;volsfr
  1814  0436  2C33               	goto	l265
  1815  0437  0875               	movf	eeprom_write@addr,w
  1816  0438  1283               	bcf	3,5	;RP0=0, select bank2
  1817  0439  1703               	bsf	3,6	;RP1=1, select bank2
  1818  043A  008D               	movwf	13	;volatile
  1819  043B  0873               	movf	eeprom_write@value,w
  1820  043C  008C               	movwf	12	;volatile
  1821  043D  303F               	movlw	63
  1822  043E  00F4               	movwf	??_eeprom_write
  1823  043F  0874               	movf	??_eeprom_write,w
  1824  0440  1683               	bsf	3,5	;RP0=1, select bank3
  1825  0441  1703               	bsf	3,6	;RP1=1, select bank3
  1826  0442  058C               	andwf	12,f	;volsfr
  1827  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0445  1003               	bcf	3,0	;volatile
  1830  0446  1B8B               	btfsc	11,7	;volatile
  1831  0447  1403               	bsf	3,0	;volatile
  1832  0448  138B               	bcf	11,7	;volatile
  1833  0449  1683               	bsf	3,5	;RP0=1, select bank3
  1834  044A  1703               	bsf	3,6	;RP1=1, select bank3
  1835  044B  150C               	bsf	12,2	;volsfr
  1836  044C  3055               	movlw	85
  1837  044D  008D               	movwf	13	;volsfr
  1838  044E  30AA               	movlw	170
  1839  044F  008D               	movwf	13	;volsfr
  1840  0450  148C               	bsf	12,1	;volsfr
  1841  0451  110C               	bcf	12,2	;volsfr
  1842  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0454  1C03               	btfss	3,0	;volatile
  1845  0455  0008               	return
  1846  0456  178B               	bsf	11,7	;volatile
  1847  0457  0008               	return
  1848  0458                     __end_of_eeprom_write:	
  1849                           
  1850                           	psect	text7
  1851  04CF                     __ptext7:	
  1852 ;; *************** function _eeprom_read *****************
  1853 ;; Defined at:
  1854 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  addr            1    wreg     unsigned char 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  addr            1    4[COMMON] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      unsigned char 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         1       0       0       0       0
  1870 ;;      Temps:          1       0       0       0       0
  1871 ;;      Totals:         2       0       0       0       0
  1872 ;;Total ram usage:        2 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function _eeprom_read
  1884  04CF                     _eeprom_read:	
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  1888                           ;eeprom_read@addr stored from wreg
  1889  04CF  00F4               	movwf	eeprom_read@addr
  1890  04D0                     l245:	
  1891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c: 6: eeprom_re
      +                          ad(unsigned char addr);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__
      +                          eeread.c: 7: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c
      +                          : 8:  do
  1892                           
  1893  04D0  0064               	clrwdt	;# 
  1894  04D1  1683               	bsf	3,5	;RP0=1, select bank3
  1895  04D2  1703               	bsf	3,6	;RP1=1, select bank3
  1896  04D3  188C               	btfsc	12,1	;volsfr
  1897  04D4  2CD0               	goto	l245
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c: 18:  return 
      +                          ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  1900  04D5  0874               	movf	eeprom_read@addr,w
  1901  04D6  1283               	bcf	3,5	;RP0=0, select bank2
  1902  04D7  1703               	bsf	3,6	;RP1=1, select bank2
  1903  04D8  008D               	movwf	13	;volatile
  1904  04D9  303F               	movlw	63
  1905  04DA  00F3               	movwf	??_eeprom_read
  1906  04DB  0873               	movf	??_eeprom_read,w
  1907  04DC  1683               	bsf	3,5	;RP0=1, select bank3
  1908  04DD  1703               	bsf	3,6	;RP1=1, select bank3
  1909  04DE  058C               	andwf	12,f	;volsfr
  1910  04DF  140C               	bsf	12,0	;volsfr
  1911  04E0  1283               	bcf	3,5	;RP0=0, select bank2
  1912  04E1  1703               	bsf	3,6	;RP1=1, select bank2
  1913  04E2  080C               	movf	12,w	;volatile
  1914  04E3  0008               	return
  1915  04E4                     __end_of_eeprom_read:	
  1916                           
  1917                           	psect	text8
  1918  047A                     __ptext8:	
  1919 ;; *************** function ___wmul *****************
  1920 ;; Defined at:
  1921 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  multiplier      2    3[COMMON] unsigned int 
  1924 ;;  multiplicand    2    5[COMMON] unsigned int 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  product         2    7[COMMON] unsigned int 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2    3[COMMON] unsigned int 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         4       0       0       0       0
  1937 ;;      Locals:         2       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0
  1939 ;;      Totals:         6       0       0       0       0
  1940 ;;Total ram usage:        6 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function ___wmul
  1952  047A                     ___wmul:	
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1956  047A  01F7               	clrf	___wmul@product
  1957  047B  01F8               	clrf	___wmul@product+1
  1958  047C                     l1486:	
  1959  047C  1C73               	btfss	___wmul@multiplier,0
  1960  047D  2C84               	goto	l311
  1961  047E  0875               	movf	___wmul@multiplicand,w
  1962  047F  07F7               	addwf	___wmul@product,f
  1963  0480  1803               	skipnc
  1964  0481  0AF8               	incf	___wmul@product+1,f
  1965  0482  0876               	movf	___wmul@multiplicand+1,w
  1966  0483  07F8               	addwf	___wmul@product+1,f
  1967  0484                     l311:	
  1968  0484  3001               	movlw	1
  1969  0485                     u1045:	
  1970  0485  1003               	clrc
  1971  0486  0DF5               	rlf	___wmul@multiplicand,f
  1972  0487  0DF6               	rlf	___wmul@multiplicand+1,f
  1973  0488  3EFF               	addlw	-1
  1974  0489  1D03               	skipz
  1975  048A  2C85               	goto	u1045
  1976  048B  3001               	movlw	1
  1977  048C                     u1055:	
  1978  048C  1003               	clrc
  1979  048D  0CF4               	rrf	___wmul@multiplier+1,f
  1980  048E  0CF3               	rrf	___wmul@multiplier,f
  1981  048F  3EFF               	addlw	-1
  1982  0490  1D03               	skipz
  1983  0491  2C8C               	goto	u1055
  1984  0492  0873               	movf	___wmul@multiplier,w
  1985  0493  0474               	iorwf	___wmul@multiplier+1,w
  1986  0494  1D03               	btfss	3,2
  1987  0495  2C7C               	goto	l1486
  1988  0496  0878               	movf	___wmul@product+1,w
  1989  0497  00F4               	movwf	?___wmul+1
  1990  0498  0877               	movf	___wmul@product,w
  1991  0499  00F3               	movwf	?___wmul
  1992  049A  0008               	return
  1993  049B                     __end_of___wmul:	
  1994                           
  1995                           	psect	text9
  1996  0503                     __ptext9:	
  1997 ;; *************** function _TMR0_Init *****************
  1998 ;; Defined at:
  1999 ;;		line 66 in file "main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		None
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _TMR0_Init
  2029  0503                     _TMR0_Init:	
  2030                           
  2031                           ;main.c: 67:  GIE = 1; PEIE= 1; T0IE = 1;
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _TMR0_Init: []
  2035  0503  178B               	bsf	11,7	;volatile
  2036  0504  170B               	bsf	11,6	;volatile
  2037  0505  168B               	bsf	11,5	;volatile
  2038                           
  2039                           ;main.c: 68:  T0CS=0; PSA=0; T0IF=0;
  2040  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0508  1281               	bcf	1,5	;volatile
  2043  0509  1181               	bcf	1,3	;volatile
  2044  050A  110B               	bcf	11,2	;volatile
  2045                           
  2046                           ;main.c: 69:  PS2=1; PS1=1; PS0=1;
  2047  050B  1501               	bsf	1,2	;volatile
  2048  050C  1481               	bsf	1,1	;volatile
  2049  050D  1401               	bsf	1,0	;volatile
  2050  050E  0008               	return
  2051  050F                     __end_of_TMR0_Init:	
  2052                           
  2053                           	psect	text10
  2054  0458                     __ptext10:	
  2055 ;; *************** function _Lcd_Write_String *****************
  2056 ;; Defined at:
  2057 ;;		line 97 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  a               1    wreg     PTR unsigned char 
  2060 ;;		 -> dizi(40), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2063 ;;		 -> dizi(40), 
  2064 ;;  i               2    0[BANK0 ] int 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       3       0       0       0
  2076 ;;      Temps:          1       0       0       0       0
  2077 ;;      Totals:         1       3       0       0       0
  2078 ;;Total ram usage:        4 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    3
  2081 ;; This function calls:
  2082 ;;		_Lcd_Write_Char
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _Lcd_Write_String
  2090  0458                     _Lcd_Write_String:	
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2094                           ;Lcd_Write_String@a stored from wreg
  2095  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2097  045A  00D0               	movwf	Lcd_Write_String@a
  2098                           
  2099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 97: void Lcd_Write_String
      +                          (char *a);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 98: {;C:\Program
      +                           Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 99:  int i;;C:\Program Files (x86)\M
      +                          icrochip\xc8\v2.05\pic\include\LCD.h: 100:  for(i=0;a[i]!='\0';i++)
  2100  045B  01CE               	clrf	Lcd_Write_String@i
  2101  045C  01CF               	clrf	Lcd_Write_String@i+1
  2102  045D                     l1380:	
  2103  045D  084E               	movf	Lcd_Write_String@i,w
  2104  045E  0750               	addwf	Lcd_Write_String@a,w
  2105  045F  00F8               	movwf	??_Lcd_Write_String
  2106  0460  0878               	movf	??_Lcd_Write_String,w
  2107  0461  0084               	movwf	4
  2108  0462  1383               	bcf	3,7	;select IRP bank0
  2109  0463  0800               	movf	0,w
  2110  0464  1903               	btfsc	3,2
  2111  0465  0008               	return
  2112                           
  2113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 101:     Lcd_Write_Char(a
      +                          [i]);
  2114  0466  084E               	movf	Lcd_Write_String@i,w
  2115  0467  0750               	addwf	Lcd_Write_String@a,w
  2116  0468  00F8               	movwf	??_Lcd_Write_String
  2117  0469  0878               	movf	??_Lcd_Write_String,w
  2118  046A  0084               	movwf	4
  2119  046B  0800               	movf	0,w
  2120  046C  120A  118A  2379  120A  118A  	fcall	_Lcd_Write_Char
  2121  0471  3001               	movlw	1
  2122  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0474  07CE               	addwf	Lcd_Write_String@i,f
  2125  0475  1803               	skipnc
  2126  0476  0ACF               	incf	Lcd_Write_String@i+1,f
  2127  0477  3000               	movlw	0
  2128  0478  07CF               	addwf	Lcd_Write_String@i+1,f
  2129  0479  2C5D               	goto	l1380
  2130  047A                     __end_of_Lcd_Write_String:	
  2131                           
  2132                           	psect	text11
  2133  0379                     __ptext11:	
  2134 ;; *************** function _Lcd_Write_Char *****************
  2135 ;; Defined at:
  2136 ;;		line 81 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  a               1    wreg     unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  a               1    7[COMMON] unsigned char 
  2141 ;;  y               1    6[COMMON] unsigned char 
  2142 ;;  temp            1    5[COMMON] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0, pclath, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2152 ;;      Params:         0       0       0       0       0
  2153 ;;      Locals:         3       0       0       0       0
  2154 ;;      Temps:          1       0       0       0       0
  2155 ;;      Totals:         4       0       0       0       0
  2156 ;;Total ram usage:        4 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    2
  2159 ;; This function calls:
  2160 ;;		_Lcd_Port
  2161 ;; This function is called by:
  2162 ;;		_Lcd_Write_String
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _Lcd_Write_Char
  2168  0379                     _Lcd_Write_Char:	
  2169                           
  2170                           ;incstack = 0
  2171                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2172                           ;Lcd_Write_Char@a stored from wreg
  2173  0379  00F7               	movwf	Lcd_Write_Char@a
  2174                           
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 81: void Lcd_Write_Char(c
      +                          har a);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 82: {;C:\Program Fi
      +                          les (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 83:    char temp,y;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\include\LCD.h: 84:    temp = a&0x0F;
  2176  037A  0877               	movf	Lcd_Write_Char@a,w
  2177  037B  390F               	andlw	15
  2178  037C  00F4               	movwf	??_Lcd_Write_Char
  2179  037D  0874               	movf	??_Lcd_Write_Char,w
  2180  037E  00F5               	movwf	Lcd_Write_Char@temp
  2181                           
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 85:    y = a&0xF0;
  2183  037F  0877               	movf	Lcd_Write_Char@a,w
  2184  0380  39F0               	andlw	240
  2185  0381  00F4               	movwf	??_Lcd_Write_Char
  2186  0382  0874               	movf	??_Lcd_Write_Char,w
  2187  0383  00F6               	movwf	Lcd_Write_Char@y
  2188                           
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 86:    RD2 = 1;
  2190  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0386  1508               	bsf	8,2	;volatile
  2193                           
  2194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 87:    Lcd_Port(y>>4);
  2195  0387  0876               	movf	Lcd_Write_Char@y,w
  2196  0388  00F4               	movwf	??_Lcd_Write_Char
  2197  0389  3004               	movlw	4
  2198  038A                     u655:	
  2199  038A  1003               	clrc
  2200  038B  0CF4               	rrf	??_Lcd_Write_Char,f
  2201  038C  3EFF               	addlw	-1
  2202  038D  1D03               	skipz
  2203  038E  2B8A               	goto	u655
  2204  038F  0874               	movf	??_Lcd_Write_Char,w
  2205  0390  120A  118A  24B5  120A  118A  	fcall	_Lcd_Port
  2206                           
  2207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 88:    RD3 = 1;
  2208  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0397  1588               	bsf	8,3	;volatile
  2211                           
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 89:    _delay((unsigned l
      +                          ong)((40)*(4000000/4000000.0)));
  2213  0398  300D               	movlw	13
  2214  0399  00F4               	movwf	??_Lcd_Write_Char
  2215  039A                     u1547:	
  2216  039A  0BF4               	decfsz	??_Lcd_Write_Char,f
  2217  039B  2B9A               	goto	u1547
  2218                           
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 90:    RD3 = 0;
  2220  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2221  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2222  039E  1188               	bcf	8,3	;volatile
  2223                           
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 91:    Lcd_Port(temp);
  2225  039F  0875               	movf	Lcd_Write_Char@temp,w
  2226  03A0  120A  118A  24B5  120A  118A  	fcall	_Lcd_Port
  2227                           
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 92:    RD3 = 1;
  2229  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2230  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2231  03A7  1588               	bsf	8,3	;volatile
  2232                           
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 93:    _delay((unsigned l
      +                          ong)((40)*(4000000/4000000.0)));
  2234  03A8  300D               	movlw	13
  2235  03A9  00F4               	movwf	??_Lcd_Write_Char
  2236  03AA                     u1557:	
  2237  03AA  0BF4               	decfsz	??_Lcd_Write_Char,f
  2238  03AB  2BAA               	goto	u1557
  2239                           
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 94:    RD3 = 0;
  2241  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2242  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2243  03AE  1188               	bcf	8,3	;volatile
  2244  03AF  0008               	return
  2245  03B0                     __end_of_Lcd_Write_Char:	
  2246                           
  2247                           	psect	text12
  2248  02A7                     __ptext12:	
  2249 ;; *************** function _Lcd_Set_Cursor *****************
  2250 ;; Defined at:
  2251 ;;		line 41 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  a               1    wreg     unsigned char 
  2254 ;;  b               1    7[COMMON] unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  a               1    0[BANK0 ] unsigned char 
  2257 ;;  temp            1    3[BANK0 ] unsigned char 
  2258 ;;  y               1    2[BANK0 ] unsigned char 
  2259 ;;  z               1    1[BANK0 ] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         1       0       0       0       0
  2270 ;;      Locals:         0       4       0       0       0
  2271 ;;      Temps:          2       0       0       0       0
  2272 ;;      Totals:         3       4       0       0       0
  2273 ;;Total ram usage:        7 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		_Lcd_Cmd
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _Lcd_Set_Cursor
  2285  02A7                     _Lcd_Set_Cursor:	
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2289                           ;Lcd_Set_Cursor@a stored from wreg
  2290  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2291  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2292  02A9  00CE               	movwf	Lcd_Set_Cursor@a
  2293                           
  2294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 41: void Lcd_Set_Cursor(c
      +                          har a, char b);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 42: {;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 43:  char temp,z,y;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 44:  if(a == 1)
  2295  02AA  034E               	decf	Lcd_Set_Cursor@a,w
  2296  02AB  1D03               	btfss	3,2
  2297  02AC  2AD0               	goto	l1354
  2298                           
  2299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 45:  {;C:\Program Files (
      +                          x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 46:    temp = 0x80 + b - 1;
  2300  02AD  0877               	movf	Lcd_Set_Cursor@b,w
  2301  02AE  3E7F               	addlw	127
  2302  02AF  00F8               	movwf	??_Lcd_Set_Cursor
  2303  02B0  0878               	movf	??_Lcd_Set_Cursor,w
  2304  02B1  00D1               	movwf	Lcd_Set_Cursor@temp
  2305                           
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 47:   z = temp>>4;
  2307  02B2  0851               	movf	Lcd_Set_Cursor@temp,w
  2308  02B3  00F8               	movwf	??_Lcd_Set_Cursor
  2309  02B4  3004               	movlw	4
  2310  02B5                     u845:	
  2311  02B5  1003               	clrc
  2312  02B6  0CF8               	rrf	??_Lcd_Set_Cursor,f
  2313  02B7  3EFF               	addlw	-1
  2314  02B8  1D03               	skipz
  2315  02B9  2AB5               	goto	u845
  2316  02BA  0878               	movf	??_Lcd_Set_Cursor,w
  2317  02BB  00F9               	movwf	??_Lcd_Set_Cursor+1
  2318  02BC  0879               	movf	??_Lcd_Set_Cursor+1,w
  2319  02BD  00CF               	movwf	Lcd_Set_Cursor@z
  2320                           
  2321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 48:   y = temp & 0x0F;
  2322  02BE  0851               	movf	Lcd_Set_Cursor@temp,w
  2323  02BF  390F               	andlw	15
  2324  02C0  00F8               	movwf	??_Lcd_Set_Cursor
  2325  02C1  0878               	movf	??_Lcd_Set_Cursor,w
  2326  02C2  00D0               	movwf	Lcd_Set_Cursor@y
  2327                           
  2328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 49:   Lcd_Cmd(z);
  2329  02C3  084F               	movf	Lcd_Set_Cursor@z,w
  2330  02C4  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2331                           
  2332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 50:   Lcd_Cmd(y);
  2333  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2334  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2335  02CB  0850               	movf	Lcd_Set_Cursor@y,w
  2336  02CC  120A  118A  249B   	fcall	_Lcd_Cmd
  2337                           
  2338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 51:  }
  2339  02CF  0008               	return
  2340  02D0                     l1354:	
  2341  02D0  3002               	movlw	2
  2342  02D1  064E               	xorwf	Lcd_Set_Cursor@a,w
  2343  02D2  1D03               	btfss	3,2
  2344  02D3  0008               	return
  2345                           
  2346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 53:  {;C:\Program Files (
      +                          x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 54:   temp = 0xC0 + b - 1;
  2347  02D4  0877               	movf	Lcd_Set_Cursor@b,w
  2348  02D5  3EBF               	addlw	191
  2349  02D6  00F8               	movwf	??_Lcd_Set_Cursor
  2350  02D7  0878               	movf	??_Lcd_Set_Cursor,w
  2351  02D8  00D1               	movwf	Lcd_Set_Cursor@temp
  2352                           
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 55:   z = temp>>4;
  2354  02D9  0851               	movf	Lcd_Set_Cursor@temp,w
  2355  02DA  00F8               	movwf	??_Lcd_Set_Cursor
  2356  02DB  3004               	movlw	4
  2357  02DC                     u865:	
  2358  02DC  1003               	clrc
  2359  02DD  0CF8               	rrf	??_Lcd_Set_Cursor,f
  2360  02DE  3EFF               	addlw	-1
  2361  02DF  1D03               	skipz
  2362  02E0  2ADC               	goto	u865
  2363  02E1  0878               	movf	??_Lcd_Set_Cursor,w
  2364  02E2  00F9               	movwf	??_Lcd_Set_Cursor+1
  2365  02E3  0879               	movf	??_Lcd_Set_Cursor+1,w
  2366  02E4  00CF               	movwf	Lcd_Set_Cursor@z
  2367                           
  2368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 56:   y = temp & 0x0F;
  2369  02E5  0851               	movf	Lcd_Set_Cursor@temp,w
  2370  02E6  390F               	andlw	15
  2371  02E7  00F8               	movwf	??_Lcd_Set_Cursor
  2372  02E8  0878               	movf	??_Lcd_Set_Cursor,w
  2373  02E9  00D0               	movwf	Lcd_Set_Cursor@y
  2374                           
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 57:   Lcd_Cmd(z);
  2376  02EA  084F               	movf	Lcd_Set_Cursor@z,w
  2377  02EB  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2378                           
  2379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 58:   Lcd_Cmd(y);
  2380  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2381  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2382  02F2  0850               	movf	Lcd_Set_Cursor@y,w
  2383  02F3  120A  118A  249B   	fcall	_Lcd_Cmd
  2384  02F6  0008               	return
  2385  02F7                     __end_of_Lcd_Set_Cursor:	
  2386                           
  2387                           	psect	text13
  2388  024C                     __ptext13:	
  2389 ;; *************** function _Lcd_Init *****************
  2390 ;; Defined at:
  2391 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0
  2407 ;;      Temps:          2       0       0       0       0
  2408 ;;      Totals:         2       0       0       0       0
  2409 ;;Total ram usage:        2 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    3
  2412 ;; This function calls:
  2413 ;;		_Lcd_Cmd
  2414 ;;		_Lcd_Port
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _Lcd_Init
  2422  024C                     _Lcd_Init:	
  2423                           
  2424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 64:   Lcd_Port(0x00);
  2425                           
  2426                           ;incstack = 0
  2427                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2428  024C  3000               	movlw	0
  2429  024D  120A  118A  24B5  120A  118A  	fcall	_Lcd_Port
  2430                           
  2431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 65:    _delay((unsigned l
      +                          ong)((20)*(4000000/4000.0)));
  2432  0252  301A               	movlw	26
  2433  0253  00F8               	movwf	??_Lcd_Init+1
  2434  0254  30F8               	movlw	248
  2435  0255  00F7               	movwf	??_Lcd_Init
  2436  0256                     u1567:	
  2437  0256  0BF7               	decfsz	??_Lcd_Init,f
  2438  0257  2A56               	goto	u1567
  2439  0258  0BF8               	decfsz	??_Lcd_Init+1,f
  2440  0259  2A56               	goto	u1567
  2441  025A  0000               	nop
  2442                           
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 66:   Lcd_Cmd(0x03);
  2444  025B  3003               	movlw	3
  2445  025C  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2446                           
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 67:  _delay((unsigned lon
      +                          g)((5)*(4000000/4000.0)));
  2448  0261  3007               	movlw	7
  2449  0262  00F8               	movwf	??_Lcd_Init+1
  2450  0263  307D               	movlw	125
  2451  0264  00F7               	movwf	??_Lcd_Init
  2452  0265                     u1577:	
  2453  0265  0BF7               	decfsz	??_Lcd_Init,f
  2454  0266  2A65               	goto	u1577
  2455  0267  0BF8               	decfsz	??_Lcd_Init+1,f
  2456  0268  2A65               	goto	u1577
  2457                           
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 68:   Lcd_Cmd(0x03);
  2459  0269  3003               	movlw	3
  2460  026A  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2461                           
  2462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 69:  _delay((unsigned lon
      +                          g)((11)*(4000000/4000.0)));
  2463  026F  300F               	movlw	15
  2464  0270  00F8               	movwf	??_Lcd_Init+1
  2465  0271  3047               	movlw	71
  2466  0272  00F7               	movwf	??_Lcd_Init
  2467  0273                     u1587:	
  2468  0273  0BF7               	decfsz	??_Lcd_Init,f
  2469  0274  2A73               	goto	u1587
  2470  0275  0BF8               	decfsz	??_Lcd_Init+1,f
  2471  0276  2A73               	goto	u1587
  2472  0277  2A78               	nop2
  2473                           
  2474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 70:   Lcd_Cmd(0x03);
  2475  0278  3003               	movlw	3
  2476  0279  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2477                           
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 72:   Lcd_Cmd(0x02);
  2479  027E  3002               	movlw	2
  2480  027F  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2481                           
  2482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 73:   Lcd_Cmd(0x02);
  2483  0284  3002               	movlw	2
  2484  0285  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2485                           
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 74:   Lcd_Cmd(0x08);
  2487  028A  3008               	movlw	8
  2488  028B  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2489                           
  2490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 75:   Lcd_Cmd(0x00);
  2491  0290  3000               	movlw	0
  2492  0291  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2493                           
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 76:   Lcd_Cmd(0x0C);
  2495  0296  300C               	movlw	12
  2496  0297  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2497                           
  2498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 77:   Lcd_Cmd(0x00);
  2499  029C  3000               	movlw	0
  2500  029D  120A  118A  249B  120A  118A  	fcall	_Lcd_Cmd
  2501                           
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 78:   Lcd_Cmd(0x06);
  2503  02A2  3006               	movlw	6
  2504  02A3  120A  118A  249B   	fcall	_Lcd_Cmd
  2505  02A6  0008               	return
  2506  02A7                     __end_of_Lcd_Init:	
  2507                           
  2508                           	psect	text14
  2509  049B                     __ptext14:	
  2510 ;; *************** function _Lcd_Cmd *****************
  2511 ;; Defined at:
  2512 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  a               1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  a               1    6[COMMON] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, pclath, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0
  2529 ;;      Totals:         3       0       0       0       0
  2530 ;;Total ram usage:        3 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    2
  2533 ;; This function calls:
  2534 ;;		_Lcd_Port
  2535 ;; This function is called by:
  2536 ;;		_Lcd_Set_Cursor
  2537 ;;		_Lcd_Init
  2538 ;;		_Lcd_Clear
  2539 ;;		_Lcd_Shift_Right
  2540 ;;		_Lcd_Shift_Left
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _Lcd_Cmd
  2546  049B                     _Lcd_Cmd:	
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2550                           ;Lcd_Cmd@a stored from wreg
  2551  049B  00F6               	movwf	Lcd_Cmd@a
  2552                           
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 26: void Lcd_Cmd(char a);
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 27: {;C:\Program Files (x8
      +                          6)\Microchip\xc8\v2.05\pic\include\LCD.h: 28:  RD2 = 0;
  2554  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2555  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2556  049E  1108               	bcf	8,2	;volatile
  2557                           
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 29:  Lcd_Port(a);
  2559  049F  0876               	movf	Lcd_Cmd@a,w
  2560  04A0  120A  118A  24B5  120A  118A  	fcall	_Lcd_Port
  2561                           
  2562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 30:  RD3 = 1;
  2563  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2564  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2565  04A7  1588               	bsf	8,3	;volatile
  2566                           
  2567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 31:         _delay((unsig
      +                          ned long)((4)*(4000000/4000.0)));
  2568  04A8  3006               	movlw	6
  2569  04A9  00F5               	movwf	??_Lcd_Cmd+1
  2570  04AA  3030               	movlw	48
  2571  04AB  00F4               	movwf	??_Lcd_Cmd
  2572  04AC                     u1597:	
  2573  04AC  0BF4               	decfsz	??_Lcd_Cmd,f
  2574  04AD  2CAC               	goto	u1597
  2575  04AE  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2576  04AF  2CAC               	goto	u1597
  2577  04B0  0000               	nop
  2578                           
  2579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 32:         RD3 = 0;
  2580  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2581  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2582  04B3  1188               	bcf	8,3	;volatile
  2583  04B4  0008               	return
  2584  04B5                     __end_of_Lcd_Cmd:	
  2585                           
  2586                           	psect	text15
  2587  04B5                     __ptext15:	
  2588 ;; *************** function _Lcd_Port *****************
  2589 ;; Defined at:
  2590 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  a               1    wreg     unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  a               1    3[COMMON] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         0       0       0       0       0
  2605 ;;      Locals:         1       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0
  2607 ;;      Totals:         1       0       0       0       0
  2608 ;;Total ram usage:        1 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    1
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_Lcd_Cmd
  2615 ;;		_Lcd_Init
  2616 ;;		_Lcd_Write_Char
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _Lcd_Port
  2622  04B5                     _Lcd_Port:	
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in _Lcd_Port: [wreg]
  2626                           ;Lcd_Port@a stored from wreg
  2627  04B5  00F3               	movwf	Lcd_Port@a
  2628                           
  2629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 4: void Lcd_Port(char a);
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 5: {;C:\Program Files (x86
      +                          )\Microchip\xc8\v2.05\pic\include\LCD.h: 6:  if(a & 1)
  2630  04B6  1C73               	btfss	Lcd_Port@a,0
  2631  04B7  2CBC               	goto	l63
  2632                           
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 7:   RD4 = 1;
  2634  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2635  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2636  04BA  1608               	bsf	8,4	;volatile
  2637  04BB  2CBF               	goto	l64
  2638  04BC                     l63:	
  2639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 8:  else
  2640                           
  2641                           
  2642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 9:   RD4 = 0;
  2643  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2644  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2645  04BE  1208               	bcf	8,4	;volatile
  2646  04BF                     l64:	
  2647                           
  2648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 11:  if(a & 2)
  2649  04BF  1CF3               	btfss	Lcd_Port@a,1
  2650  04C0  2CC3               	goto	l65
  2651                           
  2652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 12:   RD5 = 1;
  2653  04C1  1688               	bsf	8,5	;volatile
  2654  04C2  2CC4               	goto	l66
  2655  04C3                     l65:	
  2656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 13:  else
  2657                           
  2658                           
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 14:   RD5 = 0;
  2660  04C3  1288               	bcf	8,5	;volatile
  2661  04C4                     l66:	
  2662                           
  2663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 16:  if(a & 4)
  2664  04C4  1D73               	btfss	Lcd_Port@a,2
  2665  04C5  2CC8               	goto	l67
  2666                           
  2667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 17:   RD6 = 1;
  2668  04C6  1708               	bsf	8,6	;volatile
  2669  04C7  2CC9               	goto	l68
  2670  04C8                     l67:	
  2671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 18:  else
  2672                           
  2673                           
  2674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 19:   RD6 = 0;
  2675  04C8  1308               	bcf	8,6	;volatile
  2676  04C9                     l68:	
  2677                           
  2678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 21:  if(a & 8)
  2679  04C9  1DF3               	btfss	Lcd_Port@a,3
  2680  04CA  2CCD               	goto	l69
  2681                           
  2682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 22:   RD7 = 1;
  2683  04CB  1788               	bsf	8,7	;volatile
  2684  04CC  0008               	return
  2685  04CD                     l69:	
  2686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 23:  else
  2687                           
  2688                           
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\LCD.h: 24:   RD7 = 0;
  2690  04CD  1388               	bcf	8,7	;volatile
  2691  04CE  0008               	return
  2692  04CF                     __end_of_Lcd_Port:	
  2693                           
  2694                           	psect	text16
  2695  02F7                     __ptext16:	
  2696 ;; *************** function _RB_Interrupt *****************
  2697 ;; Defined at:
  2698 ;;		line 37 in file "main.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2712 ;;      Params:         0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0
  2714 ;;      Temps:          3       0       0       0       0
  2715 ;;      Totals:         3       0       0       0       0
  2716 ;;Total ram usage:        3 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		Interrupt level 1
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _RB_Interrupt
  2727  02F7                     _RB_Interrupt:	
  2728                           
  2729                           ;main.c: 38:      GIE=0;
  2730  02F7  138B               	bcf	11,7	;volatile
  2731                           
  2732                           ;main.c: 40:     if(INTCONbits.T0IF){
  2733  02F8  1D0B               	btfss	11,2	;volatile
  2734  02F9  2B34               	goto	i1l135
  2735                           
  2736                           ;main.c: 41:         timer_giris++;
  2737  02FA  3001               	movlw	1
  2738  02FB  00F0               	movwf	??_RB_Interrupt
  2739  02FC  0870               	movf	??_RB_Interrupt,w
  2740  02FD  07FA               	addwf	_timer_giris,f
  2741                           
  2742                           ;main.c: 42:         if(timer_giris == 4) {
  2743  02FE  3004               	movlw	4
  2744  02FF  067A               	xorwf	_timer_giris,w
  2745  0300  1D03               	btfss	3,2
  2746  0301  2B09               	goto	i1l1512
  2747                           
  2748                           ;main.c: 43:         zaman_sayac++;
  2749  0302  3001               	movlw	1
  2750  0303  00F0               	movwf	??_RB_Interrupt
  2751  0304  0870               	movf	??_RB_Interrupt,w
  2752  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0307  07A4               	addwf	_zaman_sayac,f
  2755                           
  2756                           ;main.c: 44:         timer_giris=0;
  2757  0308  01FA               	clrf	_timer_giris
  2758  0309                     i1l1512:	
  2759                           
  2760                           ;main.c: 46:         RD0^=RD0;
  2761  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2762  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2763  030B  1008               	bcf	8,0	;volatile
  2764                           
  2765                           ;main.c: 47:         if(zaman_sayac==zaman)
  2766  030C  0824               	movf	_zaman_sayac,w
  2767  030D  0625               	xorwf	_zaman,w
  2768  030E  1D03               	skipz
  2769  030F  2B2F               	goto	i1l1538
  2770                           
  2771                           ;main.c: 48:         {;main.c: 49:             if (animasyon==1) PORTC=0xFF;
  2772  0310  0323               	decf	_animasyon,w
  2773  0311  1D03               	btfss	3,2
  2774  0312  2B15               	goto	i1l1520
  2775  0313  30FF               	movlw	255
  2776  0314  2B2C               	goto	L4
  2777  0315                     i1l1520:	
  2778  0315  3002               	movlw	2
  2779  0316  0623               	xorwf	_animasyon,w
  2780  0317  1D03               	btfss	3,2
  2781  0318  2B1B               	goto	i1l1524
  2782  0319  302A               	movlw	42
  2783  031A  2B2C               	goto	L4
  2784  031B                     i1l1524:	
  2785  031B  3003               	movlw	3
  2786  031C  0623               	xorwf	_animasyon,w
  2787  031D  1D03               	btfss	3,2
  2788  031E  2B21               	goto	i1l1528
  2789  031F  303B               	movlw	59
  2790  0320  2B2C               	goto	L4
  2791  0321                     i1l1528:	
  2792  0321  3004               	movlw	4
  2793  0322  0623               	xorwf	_animasyon,w
  2794  0323  1D03               	btfss	3,2
  2795  0324  2B27               	goto	i1l1532
  2796  0325  304D               	movlw	77
  2797  0326  2B2C               	goto	L4
  2798  0327                     i1l1532:	
  2799  0327  3005               	movlw	5
  2800  0328  0623               	xorwf	_animasyon,w
  2801  0329  1D03               	btfss	3,2
  2802  032A  2B2D               	goto	i1l1536
  2803  032B  305C               	movlw	92
  2804  032C                     L4:	
  2805  032C  0087               	movwf	7	;volatile
  2806  032D                     i1l1536:	
  2807                           
  2808                           ;main.c: 54:            zaman_sayac=0;
  2809  032D  01A4               	clrf	_zaman_sayac
  2810                           
  2811                           ;main.c: 55:         }
  2812  032E  2B30               	goto	i1l1540
  2813  032F                     i1l1538:	
  2814                           
  2815                           ;main.c: 57:              PORTC=0;
  2816  032F  0187               	clrf	7	;volatile
  2817  0330                     i1l1540:	
  2818                           
  2819                           ;main.c: 59:         T0IF=0;
  2820  0330  110B               	bcf	11,2	;volatile
  2821                           
  2822                           ;main.c: 60:         TMR0=160;
  2823  0331  30A0               	movlw	160
  2824  0332  0081               	movwf	1	;volatile
  2825                           
  2826                           ;main.c: 62:         GIE=1;
  2827  0333  178B               	bsf	11,7	;volatile
  2828  0334                     i1l135:	
  2829  0334  0872               	movf	??_RB_Interrupt+2,w
  2830  0335  008A               	movwf	10
  2831  0336  0E71               	swapf	(??_RB_Interrupt+1)^(0+4294967168),w
  2832  0337  0083               	movwf	3
  2833  0338  0EFE               	swapf	126,f
  2834  0339  0E7E               	swapf	126,w
  2835  033A  0009               	retfie
  2836  033B                     __end_of_RB_Interrupt:	
  2837  007E                     btemp	set	126	;btemp
  2838  007E                     wtemp0	set	126
  2839                           
  2840                           	psect	intentry
  2841  0004                     __pintentry:	
  2842                           ;incstack = 0
  2843                           ; Regs used in _RB_Interrupt: [wreg+status,2+status,0]
  2844                           
  2845  0004                     interrupt_function:	
  2846  007E                     saved_w	set	btemp
  2847  0004  00FE               	movwf	btemp
  2848  0005  0E03               	swapf	3,w
  2849  0006  00F1               	movwf	??_RB_Interrupt+1
  2850  0007  080A               	movf	10,w
  2851  0008  00F2               	movwf	??_RB_Interrupt+2
  2852  0009  120A  118A  2AF7   	ljmp	_RB_Interrupt


Data Sizes:
    Strings     34
    Constant    10
    Data        1
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     23      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> dizi(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 40
		 -> dizi(BANK0[40]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RB_Interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _RB_Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RB_Interrupt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RB_Interrupt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RB_Interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3775
                                             20 BANK0      3     3      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _TMR0_Init
                             ___wmul
                        _eeprom_read
                       _eeprom_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2249
                                              7 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1     196
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              7 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RB_Interrupt                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _TMR0_Init
   ___wmul
   _eeprom_read
   _eeprom_write
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _RB_Interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Dec 07 13:47:01 2022

                        pc 0002             ___bmul@product 0075                __CFG_CP$OFF 0000  
                       l63 04BC                         l64 04BF                         l65 04C3  
                       l66 04C4                         l67 04C8                         l68 04C9  
                       l69 04CD                         fsr 0004        ___wmul@multiplicand 0075  
              __CFG_LVP$ON 0000                        l311 0484                        l147 01C1  
                      l245 04D0                        l265 0433                        _GIE 005F  
                      _RD0 0040                        _RB4 0034                        _RB5 0035  
                      _RD2 0042                        _RB6 0036                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _PS0 0408                        _PS1 0409  
                      _PS2 040A               __CFG_CPD$OFF 0000                        u655 038A  
                      _PSA 040B                        u845 02B5                        u865 02DC  
                      fsr0 0004                        indf 0000               __CFG_FOSC$XT 0000  
                     l1354 02D0                       l1380 045D                       l1284 04E6  
                     l1278 0501                       l1710 0088                       l1288 04EC  
                     l1800 01A8                       l1650 0353                       l1730 00C2  
                     l1714 008D                       l1706 0058                       l1810 01CF  
                     l1660 0374                       l1716 00A9                       l1708 0086  
                     l1486 047C                       l1750 0109                       l1726 00C0  
                     l1656 0369                       l1648 0345                       l1672 03B8  
                     l1736 00E3                       l1752 0028                       l1816 01DA  
                     l1674 03C6                       l1682 03DF                       l1754 014E  
                     l1818 01E8                       l1678 03D4                       l1854 00A1  
                     l1694 0048                       l1786 0177                       l1796 018E  
                     STR_1 0421                       STR_2 0410                       _T0IE 005D  
                     _T0IF 005A                       _T0CS 040D                       u1045 0485  
                     u1055 048C                       u1225 0348                       u1315 03CC  
                     u1245 0354                       u1325 03D5                       u1255 0360  
                     u1415 00EF                       u1265 036A                       u1425 0101  
                     u1517 0196                       u1295 03BB                       u1527 01C9  
                     u1537 01E2                       u1547 039A                       u1395 00D9  
                     u1557 03AA                       u1567 0256                       u1577 0265  
                     u1587 0273                       u1597 04AC                       _PEIE 005E  
                     _TMR0 0001             ??_eeprom_write 0074               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0070                       _dizi 0026                       _main 0153  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 000C  
       ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 04B5          ___bmul@multiplier 0076  
                    ?_main 0070                      _EEADR 010D              __CFG_WDTE$OFF 0000  
          __end_of___lwdiv 0379                      i1l135 0334            __end_of___lwmod 03E4  
                    _PORTC 0007                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0050  
                    _TRISC 0087                      _TRISD 0088         __size_of_TMR0_Init 000C  
                    _adres 0022            __end_of_dpowers 0410            __end_of_isdigit 0503  
                    _zaman 0025                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0153           __end_of_Lcd_Init 02A7  
         __end_of_Lcd_Port 04CF            __initialization 000F               __end_of_main 024C  
                   ??_main 0062                     _EEDATA 010C                     _EECON1 018C  
                   _EECON2 018D                     i1l1520 0315                     i1l1512 0309  
                   i1l1540 0330                     i1l1532 0327                     i1l1524 031B  
                   i1l1528 0321                     i1l1536 032D                     i1l1538 032F  
                ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0037             __CFG_PWRTE$OFF 0000  
     __size_of_eeprom_read 0015                     ___bmul 04E4          __end_of_TMR0_Init 050F  
                   ___wmul 047A                     _adres2 0065                  ??___lwdiv 0077  
                ??___lwmod 0078       __end_of_eeprom_write 0458                  ??_isdigit 0073  
                   saved_w 007E                  ??_sprintf 0058            Lcd_Set_Cursor@a 004E  
          Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0050            Lcd_Set_Cursor@z 004F  
  __end_of__initialization 001D            eeprom_read@addr 0074        ___bmul@multiplicand 0073  
           __pcstackCOMMON 0070               __pidataBANK0 0517             _Lcd_Set_Cursor 02A7  
        eeprom_write@value 0073                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0020                 __pmaintext 0153                    ?___bmul 0073  
                  ?___wmul 0073                 __pintentry 0004  __size_of_Lcd_Write_String 0022  
   __end_of_Lcd_Set_Cursor 02F7                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
               __stringtab 0400             _Lcd_Write_Char 0379                    _Lcd_Cmd 049B  
    __size_of_eeprom_write 0026            __size_of___bmul 0011            __size_of___wmul 0021  
                  ___lwdiv 033B                    ___lwmod 03B0            ?_Lcd_Set_Cursor 0077  
                  __ptext1 0021                    __ptext2 04F5                    __ptext3 03B0  
                  __ptext4 033B                    __ptext5 04E4                    __ptext6 0432  
                  __ptext7 04CF                    __ptext8 047A                    __ptext9 0503  
                  _dpowers 0406                    _isdigit 04F5              ?_RB_Interrupt 0070  
                  _sprintf 0021                    clrloop0 0510     __end_of_Lcd_Write_Char 03B0  
     end_of_initialization 001D               _eeprom_write 0432                  Lcd_Port@a 0073  
                _TMR0_Init 0503                  _TRISBbits 0086             ??_RB_Interrupt 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0050          Lcd_Write_String@i 004E  
            ??_eeprom_read 0073             __end_of___bmul 04F5             __end_of___wmul 049B  
         _Lcd_Write_String 0458                 ?_TMR0_Init 0070        start_initialization 000F  
        __size_of_Lcd_Init 005B          __size_of_Lcd_Port 001A                   ??___bmul 0074  
                 ??___wmul 0077        __end_of_eeprom_read 04E4                __pdataBANK0 0065  
          Lcd_Write_Char@a 0077            Lcd_Write_Char@y 0076                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 004E           eeprom_write@addr 0075  
                 ?_Lcd_Cmd 0070                sprintf@flag 005B                sprintf@prec 0060  
         ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0078                  _animasyon 0023  
     __end_of_RB_Interrupt 033B                   ?___lwdiv 0073                   ?___lwmod 0051  
              ??_TMR0_Init 0073                  __pstrings 0400                   ?_isdigit 0070  
         ___lwdiv@quotient 004F                   ?_sprintf 0055          interrupt_function 0004  
           ___wmul@product 0077                  clear_ram0 050F                _eeprom_read 04CF  
                 Lcd_Cmd@a 0076                __stringbase 0405          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 024C                   _Lcd_Port 04B5  
 __end_of_Lcd_Write_String 047A           __size_of_Lcd_Cmd 001A                 _EECON1bits 018C  
         __size_of___lwdiv 003E           __size_of___lwmod 0034         __end_of__stringtab 0406  
              _isdigit$709 0073                 sprintf@val 005D           __size_of_isdigit 000E  
          ___lwdiv@divisor 0073            ___lwdiv@counter 004E                   __ptext10 0458  
                 __ptext11 0379                   __ptext12 02A7                   __ptext13 024C  
                 __ptext14 049B                   __ptext15 04B5                   __ptext16 02F7  
         __size_of_sprintf 0132              __size_of_main 00F9      __size_of_RB_Interrupt 0044  
               _INTCONbits 000B                   isdigit@c 0074               _RB_Interrupt 02F7  
       Lcd_Write_Char@temp 0075                   intlevel1 0000                  sprintf@ap 005C  
                sprintf@sp 005F           ___lwmod@dividend 0053                  stringcode 0400  
       Lcd_Set_Cursor@temp 0051                   sprintf@c 0061                   sprintf@f 0055  
          ___lwmod@divisor 0051            ___lwmod@counter 0079                   stringdir 0400  
                 stringtab 0400                _timer_giris 007A              ?_eeprom_write 0073  
             _zaman_goster 0020                 _STATUSbits 0003               ?_eeprom_read 0070  
              _zaman_sayac 0024  
